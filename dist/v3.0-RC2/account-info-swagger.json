{
  "swagger": "2.0",
  "info": {
    "title": "Account and Transaction API Specification",
    "description": "Swagger for Account and Transaction API Specification",
    "termsOfService": "https://www.openbanking.org.uk/terms",
    "contact": {
      "name": "Service Desk",
      "email": "ServiceDesk@openbanking.org.uk"
    },
    "license": {
      "name": "open-licence",
      "url": "https://www.openbanking.org.uk/open-licence"
    },
    "version": "v3.0-RC2"
  },
  "basePath": "/open-banking/v3.0",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json; charset=utf-8"
  ],
  "paths": {
    "/accounts/{AccountId}/direct-debits": {
      "get": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Get Direct Debits",
        "operationId": "GetAccountsAccountIdDirectDebits",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200DirectDebitsRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/direct-debits": {
      "get": {
        "tags": [
          "Direct Debits"
        ],
        "summary": "Get Direct Debits",
        "operationId": "GetDirectDebits",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200DirectDebitsRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/accounts/{AccountId}/offers": {
      "get": {
        "tags": [
          "Offers"
        ],
        "summary": "Get Offers",
        "operationId": "GetAccountsAccountIdOffers",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200OffersRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/offers": {
      "get": {
        "tags": [
          "Offers"
        ],
        "summary": "Get Offers",
        "operationId": "GetOffers",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200OffersRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/accounts/{AccountId}/scheduled-payments": {
      "get": {
        "tags": [
          "Scheduled Payments"
        ],
        "summary": "Get Scheduled Payments",
        "operationId": "GetAccountsAccountIdScheduledPayments",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200ScheduledPaymentsRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/scheduled-payments": {
      "get": {
        "tags": [
          "Scheduled Payments"
        ],
        "summary": "Get Scheduled Payments",
        "operationId": "GetScheduledPayments",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200ScheduledPaymentsRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/accounts/{AccountId}/balances": {
      "get": {
        "tags": [
          "Balances"
        ],
        "summary": "Get Balances",
        "operationId": "GetAccountsAccountIdBalances",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200BalancesRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/balances": {
      "get": {
        "tags": [
          "Balances"
        ],
        "summary": "Get Balances",
        "operationId": "GetBalances",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200BalancesRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/accounts/{AccountId}/product": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Products",
        "operationId": "GetAccountsAccountIdProduct",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200ProductsRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Products",
        "operationId": "GetProducts",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200ProductsRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/account-access-consents": {
      "post": {
        "tags": [
          "Account Access"
        ],
        "summary": "Create Account Access Consents",
        "operationId": "CreateAccountAccessConsents",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/OBReadConsent1Param"
          },
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201AccountAccessConsentsCreated"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/account-access-consents/{ConsentId}": {
      "get": {
        "tags": [
          "Account Access"
        ],
        "summary": "Get Account Access Consents",
        "operationId": "GetAccountAccessConsentsConsentId",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ConsentId"
          },
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200AccountAccessConsentsRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "accounts"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Account Access"
        ],
        "summary": "Delete Account Access Consents",
        "operationId": "DeleteAccountAccessConsentsConsentId",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ConsentId"
          },
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/accounts/{AccountId}/statements": {
      "get": {
        "tags": [
          "Statements"
        ],
        "summary": "Get Statements",
        "operationId": "GetAccountsAccountIdStatements",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200StatementsRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/accounts/{AccountId}/statements/{StatementId}": {
      "get": {
        "tags": [
          "Statements"
        ],
        "summary": "Get Statements",
        "operationId": "GetAccountsAccountIdStatementsStatementId",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/StatementId"
          },
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200StatementsRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/accounts/{AccountId}/statements/{StatementId}/file": {
      "get": {
        "tags": [
          "Statements"
        ],
        "summary": "Get Statements",
        "operationId": "GetAccountsAccountIdStatementsStatementIdFile",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/StatementId"
          },
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200StatementsRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/accounts/{AccountId}/statements/{StatementId}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get Transactions",
        "operationId": "GetAccountsAccountIdStatementsStatementIdTransactions",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/StatementId"
          },
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200TransactionsRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/statements": {
      "get": {
        "tags": [
          "Statements"
        ],
        "summary": "Get Statements",
        "operationId": "GetStatements",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200StatementsRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/accounts/{AccountId}/beneficiaries": {
      "get": {
        "tags": [
          "Beneficiaries"
        ],
        "summary": "Get Beneficiaries",
        "operationId": "GetAccountsAccountIdBeneficiaries",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200BeneficiariesRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/beneficiaries": {
      "get": {
        "tags": [
          "Beneficiaries"
        ],
        "summary": "Get Beneficiaries",
        "operationId": "GetBeneficiaries",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200BeneficiariesRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/accounts/{AccountId}/standing-orders": {
      "get": {
        "tags": [
          "Standing Orders"
        ],
        "summary": "Get Standing Orders",
        "operationId": "GetAccountsAccountIdStandingOrders",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200StandingOrdersRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    },
    "/standing-orders": {
      "get": {
        "tags": [
          "Standing Orders"
        ],
        "summary": "Get Standing Orders",
        "operationId": "GetStandingOrders",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-fapi-financial-id-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-last-logged-time-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-customer-ip-address-Param"
          },
          {
            "$ref": "#/parameters/x-fapi-interaction-id-Param"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200StandingOrdersRead"
          },
          "400": {
            "$ref": "#/responses/400ErrorResponse"
          },
          "401": {
            "$ref": "#/responses/401ErrorResponse"
          },
          "403": {
            "$ref": "#/responses/403ErrorResponse"
          },
          "405": {
            "$ref": "#/responses/405ErrorResponse"
          },
          "406": {
            "$ref": "#/responses/406ErrorResponse"
          },
          "429": {
            "$ref": "#/responses/429ErrorResponse"
          },
          "500": {
            "$ref": "#/responses/500ErrorResponse"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "accounts"
            ]
          }
        ]
      }
    }
  },
  "parameters": {
    "AccountId": {
      "name": "AccountId",
      "in": "path",
      "description": "AccountId",
      "required": true,
      "type": "string"
    },
    "OBReadConsent1Param": {
      "name": "OBReadConsent1Param",
      "in": "body",
      "description": "Default",
      "required": true,
      "schema": {
        "$ref": "#/definitions/OBReadConsent1"
      }
    },
    "ConsentId": {
      "name": "ConsentId",
      "in": "path",
      "description": "ConsentId",
      "required": true,
      "type": "string"
    },
    "StatementId": {
      "name": "StatementId",
      "in": "path",
      "description": "StatementId",
      "required": true,
      "type": "string"
    },
    "x-idempotency-key": {
      "name": "x-idempotency-key",
      "in": "header",
      "description": "Every request will be processed only once per x-idempotency-key.  The Idempotency Key will be valid for 24 hours.",
      "required": true,
      "type": "string",
      "pattern": "^(?!\\s)(.*)(\\S)$",
      "maxLength": 40
    },
    "x-fapi-financial-id-Param": {
      "in": "header",
      "name": "x-fapi-financial-id",
      "type": "string",
      "required": true,
      "description": "The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB."
    },
    "x-fapi-customer-ip-address-Param": {
      "in": "header",
      "name": "x-fapi-customer-ip-address",
      "type": "string",
      "required": false,
      "description": "The PSU's IP address if the PSU is currently logged in with the TPP."
    },
    "x-fapi-interaction-id-Param": {
      "in": "header",
      "name": "x-fapi-interaction-id",
      "type": "string",
      "required": false,
      "description": "An RFC4122 UID used as a correlation id."
    },
    "x-fapi-customer-last-logged-time-Param": {
      "in": "header",
      "name": "x-fapi-customer-last-logged-time",
      "type": "string",
      "required": false,
      "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nSun, 10 Sep 2017 19:43:31 UTC",
      "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)$"
    },
    "AuthorizationParam": {
      "in": "header",
      "name": "Authorization",
      "type": "string",
      "required": true,
      "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750"
    },
    "x-jws-signature-Param": {
      "in": "header",
      "name": "x-jws-signature",
      "type": "string",
      "required": false,
      "description": "DO NOT USE. Header containing a detached JWS signature of the body of the payload."
    }
  },
  "responses": {
    "200DirectDebitsRead": {
      "description": "Direct Debits Read",
      "headers": {
        "x-fapi-interaction-id": {
          "type": "string",
          "description": "An RFC4122 UID used as a correlation id."
        }
      },
      "schema": {
        "$ref": "#/definitions/OBReadDirectDebit1"
      }
    },
    "200OffersRead": {
      "description": "Offers Read",
      "headers": {
        "x-fapi-interaction-id": {
          "type": "string",
          "description": "An RFC4122 UID used as a correlation id."
        }
      },
      "schema": {
        "$ref": "#/definitions/OBReadOffer1"
      }
    },
    "200ScheduledPaymentsRead": {
      "description": "Scheduled Payments Read",
      "headers": {
        "x-fapi-interaction-id": {
          "type": "string",
          "description": "An RFC4122 UID used as a correlation id."
        }
      },
      "schema": {
        "$ref": "#/definitions/OBReadScheduledPayment1"
      }
    },
    "200BalancesRead": {
      "description": "Balances Read",
      "headers": {
        "x-fapi-interaction-id": {
          "type": "string",
          "description": "An RFC4122 UID used as a correlation id."
        }
      },
      "schema": {
        "$ref": "#/definitions/OBReadBalance1"
      }
    },
    "200ProductsRead": {
      "description": "Products Read",
      "headers": {
        "x-fapi-interaction-id": {
          "type": "string",
          "description": "An RFC4122 UID used as a correlation id."
        }
      },
      "schema": {
        "$ref": "#/definitions/OBReadProduct2"
      }
    },
    "201AccountAccessConsentsCreated": {
      "description": "Account Access Consents Created",
      "headers": {
        "x-fapi-interaction-id": {
          "type": "string",
          "description": "An RFC4122 UID used as a correlation id."
        }
      },
      "schema": {
        "$ref": "#/definitions/OBReadConsentResponse1"
      }
    },
    "200AccountAccessConsentsRead": {
      "description": "Account Access Consents Read",
      "headers": {
        "x-fapi-interaction-id": {
          "type": "string",
          "description": "An RFC4122 UID used as a correlation id."
        }
      },
      "schema": {
        "$ref": "#/definitions/OBReadConsentResponse1"
      }
    },
    "200StatementsRead": {
      "description": "Statements Read",
      "headers": {
        "x-fapi-interaction-id": {
          "type": "string",
          "description": "An RFC4122 UID used as a correlation id."
        }
      },
      "schema": {
        "$ref": "#/definitions/OBReadStatement1"
      }
    },
    "200TransactionsRead": {
      "description": "Transactions Read",
      "headers": {
        "x-fapi-interaction-id": {
          "type": "string",
          "description": "An RFC4122 UID used as a correlation id."
        }
      },
      "schema": {
        "$ref": "#/definitions/OBReadTransaction3"
      }
    },
    "200BeneficiariesRead": {
      "description": "Beneficiaries Read",
      "headers": {
        "x-fapi-interaction-id": {
          "type": "string",
          "description": "An RFC4122 UID used as a correlation id."
        }
      },
      "schema": {
        "$ref": "#/definitions/OBReadBeneficiary2"
      }
    },
    "200StandingOrdersRead": {
      "description": "Standing Orders Read",
      "headers": {
        "x-fapi-interaction-id": {
          "type": "string",
          "description": "An RFC4122 UID used as a correlation id."
        }
      },
      "schema": {
        "$ref": "#/definitions/OBReadStandingOrder3"
      }
    },
    "400ErrorResponse": {
      "description": "Bad request",
      "schema": {
        "$ref": "#/definitions/OBErrorResponse"
      }
    },
    "401ErrorResponse": {
      "description": "Unauthorized"
    },
    "403ErrorResponse": {
      "description": "Forbidden"
    },
    "405ErrorResponse": {
      "description": "Method Not Allowed"
    },
    "406ErrorResponse": {
      "description": "Not Acceptable"
    },
    "429ErrorResponse": {
      "description": "Too Many Requests",
      "headers": {
        "Retry-After": {
          "description": "Number in seconds to wait",
          "type": "integer"
        }
      }
    },
    "500ErrorResponse": {
      "description": "Internal Server Error",
      "schema": {
        "$ref": "#/definitions/OBErrorResponse"
      }
    }
  },
  "securityDefinitions": {
    "PSUOAuth2Security": {
      "type": "oauth2",
      "flow": "accessCode",
      "tokenUrl": "https://authserver.example/token",
      "authorizationUrl": "https://authserver.example/authorization",
      "scopes": {
        "accounts": "Ability to read Accounts information"
      },
      "description": "OAuth flow, it is required when the PSU needs to perform SCA with the ASPSP when a TPP wants to access an ASPSP resource owned by the PSU"
    },
    "TPPOAuth2Security": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://authserver.example/token",
      "scopes": {
        "accounts": "Ability to read Accounts information"
      },
      "description": "TPP client credential authorisation flow with the ASPSP"
    }
  },
  "definitions": {
    "AccountId": {
      "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.",
      "type": "string",
      "minLength": 1,
      "maxLength": 40
    },
    "ActiveCurrencyAndAmount_SimpleType": {
      "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
      "type": "object",
      "properties": {},
      "additionalProperties": false
    },
    "Amount": {
      "type": "string",
      "pattern": "^\\d{1,13}\\.\\d{1,5}$"
    },
    "CurrencyAndAmount": {
      "description": "Amount of money to be transferred between debtor and creditor, before deduction of charges, expressed in the currency of the debtor's account, and to be transferred in a different currency. \nUsage : Currency of the amount is expressed in the currency of the debtor's account, but the amount to be transferred is in another currency. The first agent will convert the amount and currency to the to be transferred amount and currency, eg, 'pay equivalent of 100000 EUR in JPY'(and account is in EUR).",
      "type": "object",
      "properties": {
        "Amount": {
          "$ref": "#/definitions/Amount"
        },
        "Currency": {
          "description": "Code allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters.",
          "type": "string",
          "pattern": "^[A-Z]{3,3}$"
        }
      },
      "required": [
        "Amount",
        "Currency"
      ],
      "additionalProperties": false
    },
    "OBAccount2": {
      "description": "Unambiguous identification of the account to which credit and debit entries are made.",
      "type": "object",
      "properties": {
        "AccountId": {
          "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "Currency": {
          "description": "Identification of the currency in which the account is held. \nUsage: Currency should only be used in case one and the same account number covers several currencies\nand the initiating party needs to identify which currency needs to be used for settlement on the account.",
          "type": "string",
          "pattern": "^[A-Z]{3,3}$"
        },
        "AccountType": {
          "description": "Specifies the type of account (personal or business).",
          "type": "string",
          "enum": [
            "Business",
            "Personal"
          ]
        },
        "AccountSubType": {
          "description": "Specifies the sub type of account (product family group).",
          "type": "string",
          "enum": [
            "ChargeCard",
            "CreditCard",
            "CurrentAccount",
            "EMoney",
            "Loan",
            "Mortgage",
            "PrePaidCard",
            "Savings"
          ]
        },
        "Description": {
          "description": "Specifies the description of the account type.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "Nickname": {
          "description": "The nickname of the account, assigned by the account owner in order to provide an additional means of identification of the account.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "Account": {
          "items": {
            "description": "Provides the details to identify the beneficiary account.",
            "type": "object",
            "properties": {
              "SchemeName": {
                "description": "Name of the identification scheme, in a coded form as published in an external list.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40
              },
              "Identification": {
                "description": "Beneficiary account identification.",
                "type": "string",
                "minLength": 1,
                "maxLength": 256
              },
              "Name": {
                "description": "Name of the account, as assigned by the account servicing institution.\nUsage: The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.",
                "type": "string",
                "minLength": 1,
                "maxLength": 70
              },
              "SecondaryIdentification": {
                "description": "This is secondary identification of the account, as assigned by the account servicing institution. \nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
                "type": "string",
                "minLength": 1,
                "maxLength": 34
              }
            },
            "required": [
              "SchemeName",
              "Identification"
            ],
            "additionalProperties": false
          },
          "type": "array",
          "description": "Provides the details to identify an account."
        },
        "Servicer": {
          "description": "Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.\nThis is the servicer of the beneficiary account.",
          "type": "object",
          "properties": {
            "SchemeName": {
              "description": "Name of the identification scheme, in a coded form as published in an external list.",
              "type": "string",
              "minLength": 1,
              "maxLength": 40
            },
            "Identification": {
              "description": "Unique and unambiguous identification of the servicing institution.",
              "type": "string",
              "minLength": 1,
              "maxLength": 35
            }
          },
          "required": [
            "SchemeName",
            "Identification"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "AccountId",
        "Currency",
        "AccountType",
        "AccountSubType"
      ],
      "additionalProperties": false
    },
    "OBAccount2Basic": {
      "description": "Unambiguous identification of the account to which credit and debit entries are made.",
      "type": "object",
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "Currency": {
          "description": "Identification of the currency in which the account is held. \nUsage: Currency should only be used in case one and the same account number covers several currencies\nand the initiating party needs to identify which currency needs to be used for settlement on the account.",
          "type": "string",
          "pattern": "^[A-Z]{3,3}$"
        },
        "AccountType": {
          "$ref": "#/definitions/OBExternalAccountType1Code"
        },
        "AccountSubType": {
          "$ref": "#/definitions/OBExternalAccountSubType1Code"
        },
        "Description": {
          "description": "Specifies the description of the account type.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "Nickname": {
          "description": "The nickname of the account, assigned by the account owner in order to provide an additional means of identification of the account.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        }
      },
      "required": [
        "AccountId",
        "Currency",
        "AccountType",
        "AccountSubType"
      ],
      "additionalProperties": false
    },
    "OBAccount2Detail": {
      "allOf": [
        {
          "$ref": "#/definitions/OBAccount2"
        }
      ],
      "required": [
        "Account"
      ]
    },
    "OBActiveOrHistoricCurrencyAndAmount": {
      "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
      "type": "object",
      "properties": {
        "Amount": {
          "$ref": "#/definitions/ActiveCurrencyAndAmount_SimpleType"
        },
        "Currency": {
          "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
          "type": "string",
          "pattern": "^[A-Z]{3,3}$"
        }
      },
      "required": [
        "Amount",
        "Currency"
      ],
      "additionalProperties": false
    },
    "OBAddressTypeCode": {
      "description": "Identifies the nature of the postal address.",
      "type": "string",
      "enum": [
        "Business",
        "Correspondence",
        "DeliveryTo",
        "MailTo",
        "POBox",
        "Postal",
        "Residential",
        "Statement"
      ]
    },
    "OBBCAData1": {
      "type": "object",
      "properties": {},
      "additionalProperties": false
    },
    "OBBalanceType1Code": {
      "description": "Balance type, in a coded form.",
      "type": "string",
      "enum": [
        "ClosingAvailable",
        "ClosingBooked",
        "ClosingCleared",
        "Expected",
        "ForwardAvailable",
        "Information",
        "InterimAvailable",
        "InterimBooked",
        "InterimCleared",
        "OpeningAvailable",
        "OpeningBooked",
        "OpeningCleared",
        "PreviouslyClosedBooked"
      ]
    },
    "OBBankTransactionCodeStructure1": {
      "description": "Set of elements used to fully identify the type of underlying transaction resulting in an entry.",
      "type": "object",
      "properties": {
        "Code": {
          "description": "Specifies the family within a domain.",
          "type": "string"
        },
        "SubCode": {
          "description": "Specifies the sub-product family within a specific family.",
          "type": "string"
        }
      },
      "required": [
        "Code",
        "SubCode"
      ],
      "additionalProperties": false
    },
    "OBBeneficiary2": {
      "type": "object",
      "properties": {
        "AccountId": {
          "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "BeneficiaryId": {
          "description": "A unique and immutable identifier used to identify the beneficiary resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "Reference": {
          "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "CreditorAgent": {
          "description": "Financial institution servicing an account for the debtor.",
          "type": "object",
          "properties": {
            "SchemeName": {
              "description": "Name of the identification scheme, in a coded form as published in an external list.",
              "type": "string",
              "minLength": 1,
              "maxLength": 40
            },
            "Identification": {
              "description": "Unique and unambiguous identification of a financial institution or a branch of a financial institution.",
              "type": "string",
              "minLength": 1,
              "maxLength": 35
            },
            "Name": {
              "description": "Name by which an agent is known and which is usually used to identify that agent.",
              "type": "string",
              "minLength": 1,
              "maxLength": 140
            },
            "PostalAddress": {
              "description": "Information that locates and identifies a specific address, as defined by postal services.",
              "type": "object",
              "properties": {
                "AddressType": {
                  "description": "Identifies the nature of the postal address.",
                  "type": "string",
                  "enum": [
                    "Business",
                    "Correspondence",
                    "DeliveryTo",
                    "MailTo",
                    "POBox",
                    "Postal",
                    "Residential",
                    "Statement"
                  ]
                },
                "Department": {
                  "description": "Identification of a division of a large organisation or building.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 70
                },
                "SubDepartment": {
                  "description": "Identification of a sub-division of a large organisation or building.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 70
                },
                "StreetName": {
                  "description": "Name of a street or thoroughfare.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 70
                },
                "BuildingNumber": {
                  "description": "Number that identifies the position of a building on a street.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 16
                },
                "PostCode": {
                  "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 16
                },
                "TownName": {
                  "description": "Name of a built-up area, with defined boundaries, and a local government.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 35
                },
                "CountrySubDivision": {
                  "description": "Identifies a subdivision of a country such as state, region, county.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 35
                },
                "Country": {
                  "description": "Nation with its own government.",
                  "type": "string",
                  "pattern": "^[A-Z]{2,2}$"
                },
                "AddressLine": {
                  "description": "Information that locates and identifies a specific address, as defined by postal services, presented in free format text.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 70
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "CreditorAccount": {
          "description": "Provides the details to identify the beneficiary account.",
          "type": "object",
          "properties": {
            "SchemeName": {
              "description": "Name of the identification scheme, in a coded form as published in an external list.",
              "type": "string",
              "minLength": 1,
              "maxLength": 40
            },
            "Identification": {
              "description": "Beneficiary account identification.",
              "type": "string",
              "minLength": 1,
              "maxLength": 256
            },
            "Name": {
              "description": "Name of the account, as assigned by the account servicing institution.\nUsage: The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.",
              "type": "string",
              "minLength": 1,
              "maxLength": 70
            },
            "SecondaryIdentification": {
              "description": "This is secondary identification of the account, as assigned by the account servicing institution. \nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
              "type": "string",
              "minLength": 1,
              "maxLength": 34
            }
          },
          "required": [
            "SchemeName",
            "Identification"
          ],
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "OBBeneficiary2Basic": {
      "type": "object",
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "BeneficiaryId": {
          "description": "A unique and immutable identifier used to identify the beneficiary resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "Reference": {
          "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        }
      },
      "additionalProperties": false
    },
    "OBBeneficiary2Detail": {
      "allOf": [
        {
          "$ref": "#/definitions/OBBeneficiary2"
        }
      ],
      "required": [
        "CreditorAccount"
      ]
    },
    "OBBranchAndFinancialInstitutionIdentification2": {
      "type": "object",
      "properties": {
        "SchemeName": {
          "$ref": "#/definitions/OBExternalFinancialInstitutionIdentification2Code"
        },
        "Identification": {
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        }
      },
      "required": [
        "SchemeName",
        "Identification"
      ],
      "additionalProperties": false
    },
    "OBBranchAndFinancialInstitutionIdentification3": {
      "description": "Financial institution servicing an account for the debtor.",
      "type": "object",
      "properties": {
        "SchemeName": {
          "description": "Name of the identification scheme, in a coded form as published in an external list.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "Identification": {
          "description": "Unique and unambiguous identification of a financial institution or a branch of a financial institution.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "Name": {
          "description": "Name by which an agent is known and which is usually used to identify that agent.",
          "type": "string",
          "minLength": 1,
          "maxLength": 140
        },
        "PostalAddress": {
          "$ref": "#/definitions/OBPostalAddress6"
        }
      },
      "additionalProperties": false
    },
    "OBBranchAndFinancialInstitutionIdentification4": {
      "description": "Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.\nThis is the servicer of the beneficiary account.",
      "type": "object",
      "properties": {
        "SchemeName": {
          "description": "Name of the identification scheme, in a coded form as published in an external list.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "Identification": {
          "description": "Unique and unambiguous identification of the servicing institution.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        }
      },
      "required": [
        "SchemeName",
        "Identification"
      ],
      "additionalProperties": false
    },
    "OBCashAccount1": {
      "type": "object",
      "properties": {
        "SchemeName": {
          "$ref": "#/definitions/OBExternalAccountIdentification2Code"
        },
        "Identification": {
          "type": "string",
          "minLength": 1,
          "maxLength": 34
        },
        "Name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "SecondaryIdentification": {
          "type": "string",
          "minLength": 1,
          "maxLength": 34
        }
      },
      "required": [
        "SchemeName",
        "Identification"
      ],
      "additionalProperties": false
    },
    "OBCashAccount2": {
      "type": "object",
      "properties": {
        "SchemeName": {
          "$ref": "#/definitions/OBExternalAccountIdentification3Code"
        },
        "Identification": {
          "type": "string",
          "minLength": 1,
          "maxLength": 34
        },
        "Name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "SecondaryIdentification": {
          "type": "string",
          "minLength": 1,
          "maxLength": 34
        }
      },
      "required": [
        "SchemeName",
        "Identification"
      ],
      "additionalProperties": false
    },
    "OBCashAccount3": {
      "description": "Provides the details to identify the beneficiary account.",
      "type": "object",
      "properties": {
        "SchemeName": {
          "description": "Name of the identification scheme, in a coded form as published in an external list.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "Identification": {
          "description": "Beneficiary account identification.",
          "type": "string",
          "minLength": 1,
          "maxLength": 256
        },
        "Name": {
          "description": "Name of the account, as assigned by the account servicing institution.\nUsage: The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "SecondaryIdentification": {
          "description": "This is secondary identification of the account, as assigned by the account servicing institution. \nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
          "type": "string",
          "minLength": 1,
          "maxLength": 34
        }
      },
      "required": [
        "SchemeName",
        "Identification"
      ],
      "additionalProperties": false
    },
    "OBCashAccount4": {
      "description": "Unambiguous identification of the account of the debtor, in the case of a crebit transaction.",
      "type": "object",
      "properties": {
        "SchemeName": {
          "description": "Name of the identification scheme, in a coded form as published in an external list.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "Identification": {
          "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 256
        },
        "Name": {
          "description": "Name of the account, as assigned by the account servicing institution.\nUsage: The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "SecondaryIdentification": {
          "description": "This is secondary identification of the account, as assigned by the account servicing institution. \nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
          "type": "string",
          "minLength": 1,
          "maxLength": 34
        }
      },
      "additionalProperties": false
    },
    "OBCashBalance1": {
      "description": "Set of elements used to define the balance details.",
      "type": "object",
      "properties": {
        "AccountId": {
          "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "CreditDebitIndicator": {
          "type": "string",
          "enum": [
            "Credit",
            "Debit"
          ],
          "description": "Indicates whether the balance is a credit or a debit balance. \nUsage: A zero balance is considered to be a credit balance."
        },
        "Type": {
          "description": "Balance type, in a coded form.",
          "type": "string",
          "enum": [
            "ClosingAvailable",
            "ClosingBooked",
            "ClosingCleared",
            "Expected",
            "ForwardAvailable",
            "Information",
            "InterimAvailable",
            "InterimBooked",
            "InterimCleared",
            "OpeningAvailable",
            "OpeningBooked",
            "OpeningCleared",
            "PreviouslyClosedBooked"
          ]
        },
        "DateTime": {
          "description": "Indicates the date (and time) of the balance.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "Amount": {
          "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
          "type": "object",
          "properties": {
            "Amount": {
              "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
              "type": "object",
              "properties": {},
              "additionalProperties": false
            },
            "Currency": {
              "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "Currency"
          ],
          "additionalProperties": false
        },
        "CreditLine": {
          "items": {
            "description": "Set of elements used to provide details on the credit line.",
            "type": "object",
            "properties": {
              "Included": {
                "description": "Indicates whether or not the credit line is included in the balance of the account.\nUsage: If not present, credit line is not included in the balance amount of the account.",
                "type": "boolean"
              },
              "Type": {
                "description": "Limit type, in a coded form.",
                "type": "string",
                "enum": [
                  "Available",
                  "Credit",
                  "Emergency",
                  "Pre-Agreed",
                  "Temporary"
                ]
              },
              "Amount": {
                "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
                "type": "object",
                "properties": {
                  "Amount": {
                    "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "Currency": {
                    "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
                    "type": "string",
                    "pattern": "^[A-Z]{3,3}$"
                  }
                },
                "required": [
                  "Amount",
                  "Currency"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "Included"
            ],
            "additionalProperties": false
          },
          "type": "array",
          "description": "Set of elements used to provide details on the credit line."
        }
      },
      "required": [
        "AccountId",
        "CreditDebitIndicator",
        "Type",
        "DateTime",
        "Amount"
      ],
      "additionalProperties": false,
      "minProperties": 1
    },
    "OBCreditDebitCode": {
      "type": "string",
      "enum": [
        "Credit",
        "Debit"
      ]
    },
    "OBCreditLine1": {
      "description": "Set of elements used to provide details on the credit line.",
      "type": "object",
      "properties": {
        "Included": {
          "description": "Indicates whether or not the credit line is included in the balance of the account.\nUsage: If not present, credit line is not included in the balance amount of the account.",
          "type": "boolean"
        },
        "Type": {
          "$ref": "#/definitions/OBExternalLimitType1Code"
        },
        "Amount": {
          "$ref": "#/definitions/OBActiveOrHistoricCurrencyAndAmount"
        }
      },
      "required": [
        "Included"
      ],
      "additionalProperties": false
    },
    "OBCurrencyExchange5": {
      "description": "Set of elements used to provide details on the currency exchange.",
      "type": "object",
      "properties": {
        "SourceCurrency": {
          "description": "Currency from which an amount is to be converted in a currency conversion.",
          "type": "string",
          "pattern": "^[A-Z]{3,3}$"
        },
        "TargetCurrency": {
          "description": "Currency from which an amount is to be converted in a currency conversion.",
          "type": "string",
          "pattern": "^[A-Z]{3,3}$"
        },
        "UnitCurrency": {
          "description": "Currency from which an amount is to be converted in a currency conversion.",
          "type": "string",
          "pattern": "^[A-Z]{3,3}$"
        },
        "ExchangeRate": {
          "description": "Factor used to convert an amount from one currency into another. This reflects the price at which one currency was bought with another currency.\nUsage: ExchangeRate expresses the ratio between UnitCurrency and QuotedCurrency (ExchangeRate = UnitCurrency/QuotedCurrency).",
          "type": "object",
          "properties": {},
          "additionalProperties": false
        },
        "ContractIdentification": {
          "description": "Unique identification to unambiguously identify the foreign exchange contract.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "QuotationDate": {
          "description": "Date and time at which an exchange rate is quoted.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "InstructedAmount": {
          "$ref": "#/definitions/OBActiveOrHistoricCurrencyAndAmount"
        }
      },
      "required": [
        "SourceCurrency",
        "ExchangeRate"
      ],
      "additionalProperties": false
    },
    "OBDirectDebit1": {
      "description": "Account to or from which a cash entry is made.",
      "type": "object",
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "DirectDebitId": {
          "description": "A unique and immutable identifier used to identify the direct debit resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "MandateIdentification": {
          "description": "Direct Debit reference. For AUDDIS service users provide Core Reference. For non AUDDIS service users provide Core reference if possible or last used reference.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "DirectDebitStatusCode": {
          "$ref": "#/definitions/OBExternalDirectDebitStatus1Code"
        },
        "Name": {
          "description": "Name of Service User.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "PreviousPaymentDateTime": {
          "description": "Date of most recent direct debit collection.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "PreviousPaymentAmount": {
          "$ref": "#/definitions/OBActiveOrHistoricCurrencyAndAmount"
        }
      },
      "required": [
        "AccountId",
        "MandateIdentification",
        "Name"
      ],
      "additionalProperties": false
    },
    "OBEntryStatus1Code": {
      "description": "Status of a transaction entry on the books of the account servicer.",
      "type": "string",
      "enum": [
        "Booked",
        "Pending"
      ]
    },
    "OBExternalAccountIdentification2Code": {
      "description": "Name of the identification scheme, in a coded form as published in an external list.",
      "type": "string",
      "enum": [
        "IBAN",
        "SortCodeAccountNumber"
      ]
    },
    "OBExternalAccountIdentification3Code": {
      "description": "Name of the identification scheme, in a coded form as published in an external list.",
      "type": "string",
      "enum": [
        "IBAN",
        "PAN",
        "SortCodeAccountNumber"
      ]
    },
    "OBExternalAccountSubType1Code": {
      "description": "Specifies the sub type of account (product family group).",
      "type": "string",
      "enum": [
        "ChargeCard",
        "CreditCard",
        "CurrentAccount",
        "EMoney",
        "Loan",
        "Mortgage",
        "PrePaidCard",
        "Savings"
      ]
    },
    "OBExternalAccountType1Code": {
      "description": "Specifies the type of account (personal or business).",
      "type": "string",
      "enum": [
        "Business",
        "Personal"
      ]
    },
    "OBExternalCardAuthorisationType1Code": {
      "description": "The card authorisation type.",
      "type": "string",
      "enum": [
        "ConsumerDevice",
        "Contactless",
        "None",
        "PIN"
      ]
    },
    "OBExternalCardSchemeType1Code": {
      "description": "Name of the card scheme.",
      "type": "string",
      "enum": [
        "AmericanExpress",
        "Diners",
        "Discover",
        "MasterCard",
        "VISA"
      ]
    },
    "OBExternalDirectDebitStatus1Code": {
      "description": "Specifies the status of the direct debit in code form.",
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ]
    },
    "OBExternalFinancialInstitutionIdentification2Code": {
      "description": "Name of the identification scheme, in a coded form as published in an external list.",
      "type": "string",
      "enum": [
        "BICFI"
      ]
    },
    "OBExternalLimitType1Code": {
      "description": "Limit type, in a coded form.",
      "type": "string",
      "enum": [
        "Available",
        "Credit",
        "Emergency",
        "Pre-Agreed",
        "Temporary"
      ]
    },
    "OBExternalOfferType1Code": {
      "description": "Offer type, in a coded form.",
      "type": "string",
      "enum": [
        "BalanceTransfer",
        "LimitIncrease",
        "MoneyTransfer",
        "Other",
        "PromotionalRate"
      ]
    },
    "OBExternalPartyType1Code": {
      "description": "Party type, in a coded form.",
      "type": "string",
      "enum": [
        "Delegate",
        "Joint",
        "Sole"
      ]
    },
    "OBExternalPermissions1Code": {
      "description": "Specifies the Open Banking account access data types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP.",
      "type": "string",
      "enum": [
        "ReadAccountsBasic",
        "ReadAccountsDetail",
        "ReadBalances",
        "ReadBeneficiariesBasic",
        "ReadBeneficiariesDetail",
        "ReadDirectDebits",
        "ReadOffers",
        "ReadPAN",
        "ReadParty",
        "ReadPartyPSU",
        "ReadProducts",
        "ReadScheduledPaymentsBasic",
        "ReadScheduledPaymentsDetail",
        "ReadStandingOrdersBasic",
        "ReadStandingOrdersDetail",
        "ReadStatementsBasic",
        "ReadStatementsDetail",
        "ReadTransactionsBasic",
        "ReadTransactionsCredits",
        "ReadTransactionsDebits",
        "ReadTransactionsDetail"
      ]
    },
    "OBExternalProductType1Code": {
      "description": "Descriptive code for the product category. \nIf ProductType - \"Other\" is chosen, the object OtherProductType must be populated with name, and description for the ASPSP's",
      "type": "string",
      "enum": [
        "PersonalCurrentAccount",
        "BusinessCurrentAccount",
        "CommercialCreditCard",
        "SMELoan",
        "Other"
      ]
    },
    "OBExternalRequestStatus1Code": {
      "description": "Specifies the status of consent resource in code form.",
      "type": "string",
      "enum": [
        "Authorised",
        "AwaitingAuthorisation",
        "Rejected",
        "Revoked"
      ]
    },
    "OBExternalScheduleType1Code": {
      "description": "Specifies the scheduled payment date type requested",
      "type": "string",
      "enum": [
        "Arrival",
        "Execution"
      ]
    },
    "OBExternalStandingOrderStatus1Code": {
      "description": "Specifies the status of the standing order in code form.",
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ]
    },
    "OBExternalStatementAmountType1Code": {
      "description": "Amount type, in a coded form.",
      "type": "string",
      "enum": [
        "ArrearsClosingBalance",
        "AvailableBalance",
        "AverageBalanceWhenInCredit",
        "AverageBalanceWhenInDebit",
        "AverageDailyBalance",
        "BalanceTransferClosingBalance",
        "CashClosingBalance",
        "ClosingBalance",
        "CreditLimit",
        "CurrentPayment",
        "DirectDebitPaymentDue",
        "FSCSInsurance",
        "MinimumPaymentDue",
        "PendingTransactionsBalance",
        "PreviousClosingBalance",
        "PreviousPayment",
        "PurchaseClosingBalance",
        "StartingBalance",
        "TotalAdjustments",
        "TotalCashAdvances",
        "TotalCharges",
        "TotalCredits",
        "TotalDebits",
        "TotalPurchases"
      ]
    },
    "OBExternalStatementBenefitType1Code": {
      "description": "Benefit type, in a coded form.",
      "type": "string",
      "enum": [
        "Cashback",
        "Insurance",
        "TravelDiscount",
        "TravelInsurance"
      ]
    },
    "OBExternalStatementDateTimeType1Code": {
      "description": "Date time type, in a coded form.",
      "type": "string",
      "enum": [
        "BalanceTransferPromoEnd",
        "DirectDebitDue",
        "LastPayment",
        "LastStatement",
        "NextStatement",
        "PaymentDue",
        "PurchasePromoEnd",
        "StatementAvailable"
      ]
    },
    "OBExternalStatementFeeType1Code": {
      "description": "Fee type, in a coded form.",
      "type": "string",
      "enum": [
        "Annual",
        "BalanceTransfer",
        "CashAdvance",
        "CashTransaction",
        "ForeignTransaction",
        "Gambling",
        "LatePayment",
        "MoneyTransfer",
        "Monthly",
        "Overlimit",
        "PostalOrder",
        "PrizeEntry",
        "StatementCopy",
        "Total"
      ]
    },
    "OBExternalStatementInterestType1Code": {
      "description": "Interest amount type, in a coded form.",
      "type": "string",
      "enum": [
        "BalanceTransfer",
        "Cash",
        "EstimatedNext",
        "Purchase",
        "Total"
      ]
    },
    "OBExternalStatementRateType1Code": {
      "description": "Statement rate type, in a coded form.",
      "type": "string",
      "enum": [
        "AnnualBalanceTransfer",
        "AnnualBalanceTransferAfterPromo",
        "AnnualBalanceTransferPromo",
        "AnnualCash",
        "AnnualPurchase",
        "AnnualPurchaseAfterPromo",
        "AnnualPurchasePromo",
        "MonthlyBalanceTransfer",
        "MonthlyCash",
        "MonthlyPurchase"
      ]
    },
    "OBExternalStatementType1Code": {
      "description": "Statement type, in a coded form.",
      "type": "string",
      "enum": [
        "AccountClosure",
        "AccountOpening",
        "Annual",
        "Interim",
        "RegularPeriodic"
      ]
    },
    "OBExternalStatementValueType1Code": {
      "description": "Statement value type, in a coded form.",
      "type": "string",
      "enum": [
        "AirMilesPoints",
        "AirMilesPointsBalance",
        "Credits",
        "Debits",
        "HotelPoints",
        "HotelPointsBalance",
        "RetailShoppingPoints",
        "RetailShoppingPointsBalance"
      ]
    },
    "OBMerchantDetails1": {
      "description": "Details of the merchant involved in the transaction.",
      "type": "object",
      "properties": {
        "MerchantName": {
          "description": "Name by which the merchant is known.",
          "type": "string",
          "minLength": 1,
          "maxLength": 350
        },
        "MerchantCategoryCode": {
          "description": "Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.",
          "type": "string",
          "minLength": 3,
          "maxLength": 4
        }
      },
      "additionalProperties": false
    },
    "OBOffer1": {
      "type": "object",
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "OfferId": {
          "description": "A unique and immutable identifier used to identify the offer resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "OfferType": {
          "$ref": "#/definitions/OBExternalOfferType1Code"
        },
        "Description": {
          "description": "Further details of the offer.",
          "type": "string",
          "minLength": 1,
          "maxLength": 500
        },
        "StartDateTime": {
          "description": "Date and time at which the offer starts.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "EndDateTime": {
          "description": "Date and time at which the offer ends.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "Rate": {
          "description": "Rate associated with the offer type.",
          "type": "string",
          "minLength": 1,
          "maxLength": 10,
          "pattern": "^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$"
        },
        "Value": {
          "description": "Value associated with the offer type.",
          "type": "integer",
          "format": "int32"
        },
        "Term": {
          "description": "Further details of the term of the offer.",
          "type": "string",
          "minLength": 1,
          "maxLength": 500
        },
        "URL": {
          "description": "URL (Uniform Resource Locator) where the document can be found",
          "type": "string",
          "minLength": 1,
          "maxLength": 256
        },
        "Amount": {
          "$ref": "#/definitions/OBActiveOrHistoricCurrencyAndAmount"
        },
        "Fee": {
          "$ref": "#/definitions/OBActiveOrHistoricCurrencyAndAmount"
        }
      },
      "required": [
        "AccountId"
      ],
      "additionalProperties": false
    },
    "OBPCAData1": {
      "type": "object",
      "properties": {},
      "additionalProperties": false
    },
    "OBParty1": {
      "type": "object",
      "properties": {
        "PartyId": {
          "description": "A unique and immutable identifier used to identify the customer resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "PartyNumber": {
          "description": "Number assigned by an agent to identify its customer.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "PartyType": {
          "$ref": "#/definitions/OBExternalPartyType1Code"
        },
        "Name": {
          "description": "Name by which a party is known and which is usually used to identify that party.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "EmailAddress": {
          "description": "Address for electronic mail (e-mail).",
          "type": "string",
          "minLength": 1,
          "maxLength": 256
        },
        "Phone": {
          "description": "Collection of information that identifies a phone number, as defined by telecom services.",
          "type": "string",
          "pattern": "\\+[0-9]{1,3}-[0-9()+\\-]{1,30}"
        },
        "Mobile": {
          "description": "Collection of information that identifies a mobile phone number, as defined by telecom services.",
          "type": "string",
          "pattern": "\\+[0-9]{1,3}-[0-9()+\\-]{1,30}"
        },
        "Address": {
          "items": {
            "$ref": "#/definitions/OBPostalAddress8"
          },
          "type": "array",
          "description": "Postal address of a party."
        }
      },
      "required": [
        "PartyId"
      ],
      "additionalProperties": false
    },
    "OBPostalAddress6": {
      "description": "Information that locates and identifies a specific address, as defined by postal services.",
      "type": "object",
      "properties": {
        "AddressType": {
          "$ref": "#/definitions/OBAddressTypeCode"
        },
        "Department": {
          "description": "Identification of a division of a large organisation or building.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "SubDepartment": {
          "description": "Identification of a sub-division of a large organisation or building.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "StreetName": {
          "description": "Name of a street or thoroughfare.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "BuildingNumber": {
          "description": "Number that identifies the position of a building on a street.",
          "type": "string",
          "minLength": 1,
          "maxLength": 16
        },
        "PostCode": {
          "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.",
          "type": "string",
          "minLength": 1,
          "maxLength": 16
        },
        "TownName": {
          "description": "Name of a built-up area, with defined boundaries, and a local government.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "CountrySubDivision": {
          "description": "Identifies a subdivision of a country such as state, region, county.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "Country": {
          "description": "Nation with its own government.",
          "type": "string",
          "pattern": "^[A-Z]{2,2}$"
        },
        "AddressLine": {
          "description": "Information that locates and identifies a specific address, as defined by postal services, presented in free format text.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        }
      },
      "additionalProperties": false
    },
    "OBPostalAddress8": {
      "description": "Postal address of a party.",
      "type": "object",
      "properties": {
        "AddressType": {
          "$ref": "#/definitions/OBAddressTypeCode"
        },
        "AddressLine": {
          "description": "Information that locates and identifies a specific address, as defined by postal services, that is presented in free format text.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "StreetName": {
          "description": "Name of a street or thoroughfare.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "BuildingNumber": {
          "description": "Number that identifies the position of a building on a street.",
          "type": "string",
          "minLength": 1,
          "maxLength": 16
        },
        "PostCode": {
          "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.",
          "type": "string",
          "minLength": 1,
          "maxLength": 16
        },
        "TownName": {
          "description": "Name of a built-up area, with defined boundaries, and a local government.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "CountrySubDivision": {
          "description": "Identifies a subdivision of a country eg, state, region, county.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "Country": {
          "description": "Nation with its own government, occupying a particular territory.",
          "type": "string",
          "pattern": "^[A-Z]{2,2}$"
        }
      },
      "required": [
        "Country"
      ],
      "additionalProperties": false
    },
    "OBProduct2": {
      "type": "object",
      "properties": {
        "ProductName": {
          "description": "The name of the product used for marketing purposes from a customer perspective. I.e. what the customer would recognise.",
          "type": "string"
        },
        "ProductId": {
          "description": "Identifier within the parent organisation for the product. Must be unique in the organisation.",
          "type": "string"
        },
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "SecondaryProductId": {
          "description": "Identifier within the parent organisation for the product. Must be unique in the organisation.",
          "type": "string"
        },
        "ProductType": {
          "$ref": "#/definitions/OBExternalProductType1Code"
        },
        "MarketingStateId": {
          "description": "Unique and unambiguous identification of a Product Marketing State.",
          "type": "string"
        },
        "OtherProductType": {
          "$ref": "#/definitions/OB_OtherProductType1"
        },
        "PCA": {
          "$ref": "#/definitions/OBPCAData1"
        },
        "BCA": {
          "$ref": "#/definitions/OBBCAData1"
        }
      },
      "required": [
        "AccountId",
        "ProductType"
      ],
      "additionalProperties": false
    },
    "OBReadAccount2": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "properties": {
            "Account": {
              "items": {
                "$ref": "#/definitions/OBAccount2"
              },
              "type": "array",
              "description": "Unambiguous identification of the account to which credit and debit entries are made."
            }
          },
          "additionalProperties": false
        },
        "Links": {
          "$ref": "#/definitions/Links"
        },
        "Meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "required": [
        "Data",
        "Links",
        "Meta"
      ],
      "additionalProperties": false
    },
    "OBReadBalance1": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "properties": {
            "Balance": {
              "items": {
                "$ref": "#/definitions/OBCashBalance1"
              },
              "type": "array",
              "description": "Set of elements used to define the balance details.",
              "minItems": 1
            }
          },
          "required": [
            "Balance"
          ],
          "additionalProperties": false
        },
        "Links": {
          "$ref": "#/definitions/Links"
        },
        "Meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "required": [
        "Data",
        "Links",
        "Meta"
      ],
      "additionalProperties": false
    },
    "OBReadBeneficiary2": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "properties": {
            "Beneficiary": {
              "items": {
                "$ref": "#/definitions/OBBeneficiary2"
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "Links": {
          "$ref": "#/definitions/Links"
        },
        "Meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "required": [
        "Data",
        "Links",
        "Meta"
      ],
      "additionalProperties": false
    },
    "OBReadConsent1": {
      "type": "object",
      "properties": {
        "Data": {
          "$ref": "#/definitions/OBReadData1"
        },
        "Risk": {
          "$ref": "#/definitions/OBRisk2"
        },
        "Links": {
          "$ref": "#/definitions/Links"
        },
        "Meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "required": [
        "Data",
        "Risk",
        "Links",
        "Meta"
      ],
      "additionalProperties": false
    },
    "OBReadConsentResponse1": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "properties": {
            "ConsentId": {
              "description": "Unique identification as assigned to identify the account access consent resource.",
              "type": "string",
              "minLength": 1,
              "maxLength": 128
            },
            "CreationDateTime": {
              "description": "Date and time at which the resource was created.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
              "type": "string",
              "format": "date-time"
            },
            "Status": {
              "$ref": "#/definitions/OBExternalRequestStatus1Code"
            },
            "StatusUpdateDateTime": {
              "description": "Date and time at which the resource status was updated.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
              "type": "string",
              "format": "date-time"
            },
            "Permissions": {
              "items": {
                "$ref": "#/definitions/OBExternalPermissions1Code"
              },
              "type": "array",
              "description": "Specifies the Open Banking account access data types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP.",
              "minItems": 1
            },
            "ExpirationDateTime": {
              "description": "Specified date and time the permissions will expire.\nIf this is not populated, the permissions will be open ended.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
              "type": "string",
              "format": "date-time"
            },
            "TransactionFromDateTime": {
              "description": "Specified start date and time for the transaction query period.\nIf this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
              "type": "string",
              "format": "date-time"
            },
            "TransactionToDateTime": {
              "description": "Specified end date and time for the transaction query period.\nIf this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "ConsentId",
            "CreationDateTime",
            "Status",
            "StatusUpdateDateTime",
            "Permissions"
          ],
          "additionalProperties": false
        },
        "Risk": {
          "$ref": "#/definitions/OBRisk2"
        },
        "Links": {
          "$ref": "#/definitions/Links"
        },
        "Meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "required": [
        "Data",
        "Risk",
        "Links",
        "Meta"
      ],
      "additionalProperties": false
    },
    "OBReadData1": {
      "type": "object",
      "properties": {
        "Permissions": {
          "items": {
            "$ref": "#/definitions/OBExternalPermissions1Code"
          },
          "type": "array",
          "description": "Specifies the Open Banking account access data types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP.",
          "minItems": 1
        },
        "ExpirationDateTime": {
          "description": "Specified date and time the permissions will expire.\nIf this is not populated, the permissions will be open ended.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "TransactionFromDateTime": {
          "description": "Specified start date and time for the transaction query period.\nIf this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "TransactionToDateTime": {
          "description": "Specified end date and time for the transaction query period.\nIf this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "Permissions"
      ],
      "additionalProperties": false
    },
    "OBReadDataResponse1": {
      "type": "object",
      "properties": {
        "Permissions": {
          "items": {
            "description": "Specifies the Open Banking account access data types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP.",
            "type": "string",
            "enum": [
              "ReadAccountsBasic",
              "ReadAccountsDetail",
              "ReadBalances",
              "ReadBeneficiariesBasic",
              "ReadBeneficiariesDetail",
              "ReadDirectDebits",
              "ReadOffers",
              "ReadPAN",
              "ReadParty",
              "ReadPartyPSU",
              "ReadProducts",
              "ReadScheduledPaymentsBasic",
              "ReadScheduledPaymentsDetail",
              "ReadStandingOrdersBasic",
              "ReadStandingOrdersDetail",
              "ReadStatementsBasic",
              "ReadStatementsDetail",
              "ReadTransactionsBasic",
              "ReadTransactionsCredits",
              "ReadTransactionsDebits",
              "ReadTransactionsDetail"
            ]
          },
          "type": "array",
          "description": "Specifies the Open Banking account request types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP.",
          "minItems": 1
        },
        "ExpirationDateTime": {
          "description": "Specified date and time the permissions will expire.\nIf this is not populated, the permissions will be open ended.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "TransactionFromDateTime": {
          "description": "Specified start date and time for the transaction query period.\nIf this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "TransactionToDateTime": {
          "description": "Specified end date and time for the transaction query period.\nIf this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "AccountRequestId": {
          "description": "Unique identification as assigned to identify the account request resource.",
          "type": "string",
          "minLength": 1,
          "maxLength": 128
        },
        "CreationDateTime": {
          "description": "Date and time at which the resource was created.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "Status": {
          "description": "Specifies the status of consent resource in code form.",
          "type": "string",
          "enum": [
            "Authorised",
            "AwaitingAuthorisation",
            "Rejected",
            "Revoked"
          ]
        },
        "StatusUpdateDateTime": {
          "description": "Date and time at which the resource status was updated.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "Permissions",
        "AccountRequestId",
        "CreationDateTime",
        "Status",
        "StatusUpdateDateTime"
      ],
      "additionalProperties": false
    },
    "OBReadDirectDebit1": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "properties": {
            "DirectDebit": {
              "items": {
                "$ref": "#/definitions/OBDirectDebit1"
              },
              "type": "array",
              "description": "Account to or from which a cash entry is made."
            }
          },
          "additionalProperties": false
        },
        "Links": {
          "$ref": "#/definitions/Links"
        },
        "Meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "required": [
        "Data",
        "Links",
        "Meta"
      ],
      "additionalProperties": false
    },
    "OBReadOffer1": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "properties": {
            "Offer": {
              "items": {
                "$ref": "#/definitions/OBOffer1"
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "Links": {
          "$ref": "#/definitions/Links"
        },
        "Meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "required": [
        "Data",
        "Links",
        "Meta"
      ],
      "additionalProperties": false
    },
    "OBReadParty1": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "properties": {
            "Party": {
              "$ref": "#/definitions/OBParty1"
            }
          },
          "additionalProperties": false
        },
        "Links": {
          "$ref": "#/definitions/Links"
        },
        "Meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "required": [
        "Data",
        "Links",
        "Meta"
      ],
      "additionalProperties": false
    },
    "OBReadProduct2": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "properties": {
            "Product": {
              "items": {
                "$ref": "#/definitions/OBProduct2"
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "Links": {
          "$ref": "#/definitions/Links"
        },
        "Meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "required": [
        "Data",
        "Links",
        "Meta"
      ],
      "additionalProperties": false
    },
    "OBReadRequest1": {
      "type": "object",
      "properties": {
        "Data": {
          "$ref": "#/definitions/OBReadData1"
        },
        "Risk": {
          "$ref": "#/definitions/OBRisk2"
        }
      },
      "required": [
        "Data",
        "Risk"
      ],
      "additionalProperties": false
    },
    "OBReadResponse1": {
      "type": "object",
      "properties": {
        "Data": {
          "$ref": "#/definitions/OBReadDataResponse1"
        },
        "Risk": {
          "$ref": "#/definitions/OBRisk2"
        },
        "Links": {
          "$ref": "#/definitions/Links"
        },
        "Meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "required": [
        "Data",
        "Risk",
        "Links",
        "Meta"
      ],
      "additionalProperties": false
    },
    "OBReadScheduledPayment1": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "properties": {
            "ScheduledPayment": {
              "items": {
                "$ref": "#/definitions/OBScheduledPayment1"
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "Links": {
          "$ref": "#/definitions/Links"
        },
        "Meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "required": [
        "Data",
        "Links",
        "Meta"
      ],
      "additionalProperties": false
    },
    "OBReadStandingOrder2": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "properties": {
            "StandingOrder": {
              "items": {
                "$ref": "#/definitions/OBStandingOrder2"
              },
              "type": "array",
              "description": "Account to or from which a cash entry is made."
            }
          },
          "additionalProperties": false
        },
        "Links": {
          "$ref": "#/definitions/Links"
        },
        "Meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "required": [
        "Data",
        "Links",
        "Meta"
      ],
      "additionalProperties": false
    },
    "OBReadStandingOrder3": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "properties": {
            "StandingOrder": {
              "items": {
                "$ref": "#/definitions/OBStandingOrder3"
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "Links": {
          "$ref": "#/definitions/Links"
        },
        "Meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "required": [
        "Data",
        "Links",
        "Meta"
      ],
      "additionalProperties": false
    },
    "OBReadStatement1": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "properties": {
            "Statement": {
              "items": {
                "$ref": "#/definitions/OBStatement1"
              },
              "type": "array",
              "description": "Provides further details on a statement resource."
            }
          },
          "additionalProperties": false
        },
        "Links": {
          "$ref": "#/definitions/Links"
        },
        "Meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "required": [
        "Data",
        "Links",
        "Meta"
      ],
      "additionalProperties": false
    },
    "OBReadTransaction2": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "properties": {
            "Transaction": {
              "items": {
                "$ref": "#/definitions/OBTransaction2"
              },
              "type": "array",
              "description": "Provides further details on an entry in the report."
            }
          },
          "additionalProperties": false
        },
        "Links": {
          "$ref": "#/definitions/Links"
        },
        "Meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "required": [
        "Data",
        "Links",
        "Meta"
      ],
      "additionalProperties": false
    },
    "OBReadTransaction3": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "properties": {
            "Transaction": {
              "items": {
                "$ref": "#/definitions/OBTransaction3"
              },
              "type": "array",
              "description": "Provides further details on an entry in the report."
            }
          },
          "additionalProperties": false
        },
        "Links": {
          "$ref": "#/definitions/Links"
        },
        "Meta": {
          "$ref": "#/definitions/Meta"
        }
      },
      "required": [
        "Data",
        "Links",
        "Meta"
      ],
      "additionalProperties": false
    },
    "OBScheduledPayment1": {
      "type": "object",
      "properties": {
        "AccountId": {
          "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "ScheduledPaymentId": {
          "description": "A unique and immutable identifier used to identify the scheduled payment resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "ScheduledPaymentDateTime": {
          "description": "The date on which the scheduled payment will be made.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "ScheduledType": {
          "description": "Specifies the scheduled payment date type requested",
          "type": "string",
          "enum": [
            "Arrival",
            "Execution"
          ]
        },
        "Reference": {
          "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "InstructedAmount": {
          "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
          "type": "object",
          "properties": {
            "Amount": {
              "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
              "type": "object",
              "properties": {},
              "additionalProperties": false
            },
            "Currency": {
              "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "Currency"
          ],
          "additionalProperties": false
        },
        "CreditorAgent": {
          "description": "Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.\nThis is the servicer of the beneficiary account.",
          "type": "object",
          "properties": {
            "SchemeName": {
              "description": "Name of the identification scheme, in a coded form as published in an external list.",
              "type": "string",
              "minLength": 1,
              "maxLength": 40
            },
            "Identification": {
              "description": "Unique and unambiguous identification of the servicing institution.",
              "type": "string",
              "minLength": 1,
              "maxLength": 35
            }
          },
          "required": [
            "SchemeName",
            "Identification"
          ],
          "additionalProperties": false
        },
        "CreditorAccount": {
          "description": "Provides the details to identify the beneficiary account.",
          "type": "object",
          "properties": {
            "SchemeName": {
              "description": "Name of the identification scheme, in a coded form as published in an external list.",
              "type": "string",
              "minLength": 1,
              "maxLength": 40
            },
            "Identification": {
              "description": "Beneficiary account identification.",
              "type": "string",
              "minLength": 1,
              "maxLength": 256
            },
            "Name": {
              "description": "Name of the account, as assigned by the account servicing institution.\nUsage: The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.",
              "type": "string",
              "minLength": 1,
              "maxLength": 70
            },
            "SecondaryIdentification": {
              "description": "This is secondary identification of the account, as assigned by the account servicing institution. \nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
              "type": "string",
              "minLength": 1,
              "maxLength": 34
            }
          },
          "required": [
            "SchemeName",
            "Identification"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "AccountId",
        "ScheduledPaymentDateTime",
        "ScheduledType",
        "InstructedAmount"
      ],
      "additionalProperties": false
    },
    "OBScheduledPayment1Basic": {
      "type": "object",
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "ScheduledPaymentId": {
          "description": "A unique and immutable identifier used to identify the scheduled payment resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "ScheduledPaymentDateTime": {
          "description": "The date on which the scheduled payment will be made.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "ScheduledType": {
          "$ref": "#/definitions/OBExternalScheduleType1Code"
        },
        "Reference": {
          "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "InstructedAmount": {
          "$ref": "#/definitions/OBActiveOrHistoricCurrencyAndAmount"
        }
      },
      "required": [
        "AccountId",
        "ScheduledPaymentDateTime",
        "ScheduledType",
        "InstructedAmount"
      ],
      "additionalProperties": false
    },
    "OBScheduledPayment1Detail": {
      "allOf": [
        {
          "$ref": "#/definitions/OBScheduledPayment1"
        }
      ],
      "required": [
        "CreditorAccount"
      ]
    },
    "OBStandingOrder2": {
      "description": "Account to or from which a cash entry is made.",
      "type": "object",
      "properties": {
        "AccountId": {
          "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "StandingOrderId": {
          "description": "A unique and immutable identifier used to identify the standing order resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "Frequency": {
          "description": "Individual Definitions:\nEvryDay - Every day\nEvryWorkgDay - Every working day\nIntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)\nWkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)\nIntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)\nQtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED)\nIndividual Patterns:\nEvryDay (ScheduleCode)\nEvryWorkgDay (ScheduleCode)\nIntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)\nWkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)\nIntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)\nQtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay\nThe regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:\nEvryDay\nEvryWorkgDay\nIntrvlWkDay:0[1-9]:0[1-7]\nWkInMnthDay:0[1-5]:0[1-7]\nIntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])\nQtrDay:(ENGLISH|SCOTTISH|RECEIVED)\nFull Regular Expression:\n^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$",
          "type": "string",
          "minLength": 1,
          "maxLength": 35,
          "pattern": "^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$"
        },
        "Reference": {
          "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "FirstPaymentDateTime": {
          "description": "The date on which the first payment for a Standing Order schedule will be made.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "FirstPaymentAmount": {
          "description": "The amount of the first Standing Order",
          "type": "object",
          "properties": {
            "Amount": {
              "type": "string",
              "pattern": "^\\d{1,13}\\.\\d{1,5}$"
            },
            "Currency": {
              "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "Currency"
          ],
          "additionalProperties": false
        },
        "NextPaymentDateTime": {
          "description": "The date on which the next payment for a Standing Order schedule will be made.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "NextPaymentAmount": {
          "description": "The amount of the next Standing Order",
          "type": "object",
          "properties": {
            "Amount": {
              "type": "string",
              "pattern": "^\\d{1,13}\\.\\d{1,5}$"
            },
            "Currency": {
              "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "Currency"
          ],
          "additionalProperties": false
        },
        "FinalPaymentDateTime": {
          "description": "The date on which the final payment for a Standing Order schedule will be made.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "FinalPaymentAmount": {
          "description": "The amount of the final Standing Order",
          "type": "object",
          "properties": {
            "Amount": {
              "type": "string",
              "pattern": "^\\d{1,13}\\.\\d{1,5}$"
            },
            "Currency": {
              "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "Currency"
          ],
          "additionalProperties": false
        },
        "StandingOrderStatusCode": {
          "description": "Specifies the status of the standing order in code form.",
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ]
        },
        "CreditorAgent": {
          "type": "object",
          "properties": {
            "SchemeName": {
              "description": "Name of the identification scheme, in a coded form as published in an external list.",
              "type": "string",
              "enum": [
                "BICFI"
              ]
            },
            "Identification": {
              "type": "string",
              "minLength": 1,
              "maxLength": 35,
              "description": "Unique and unambiguous identification of the servicing institution."
            }
          },
          "required": [
            "SchemeName",
            "Identification"
          ],
          "additionalProperties": false,
          "description": "Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.\nThis is the servicer of the beneficiary account."
        },
        "CreditorAccount": {
          "type": "object",
          "properties": {
            "SchemeName": {
              "description": "Name of the identification scheme, in a coded form as published in an external list.",
              "type": "string",
              "enum": [
                "IBAN",
                "SortCodeAccountNumber"
              ]
            },
            "Identification": {
              "type": "string",
              "minLength": 1,
              "maxLength": 34,
              "description": "Beneficiary account identification."
            },
            "Name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 70,
              "description": "Name of the account, as assigned by the account servicing institution, in agreement with the account owner in order to provide an additional means of identification of the account.\nUsage: The account name is different from the account owner name. The account name is used in certain user communities to provide a means of identifying the account, in addition to the account owner's identity and the account number."
            },
            "SecondaryIdentification": {
              "type": "string",
              "minLength": 1,
              "maxLength": 34,
              "description": "This is secondary identification of the account, as assigned by the account servicing institution. \nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination)."
            }
          },
          "required": [
            "SchemeName",
            "Identification"
          ],
          "additionalProperties": false,
          "description": "Provides the details to identify the beneficiary account."
        }
      },
      "required": [
        "AccountId",
        "Frequency",
        "NextPaymentDateTime",
        "NextPaymentAmount"
      ],
      "additionalProperties": false
    },
    "OBStandingOrder2Basic": {
      "description": "Account to or from which a cash entry is made.",
      "type": "object",
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "StandingOrderId": {
          "description": "A unique and immutable identifier used to identify the standing order resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "Frequency": {
          "description": "Individual Definitions:\nEvryDay - Every day\nEvryWorkgDay - Every working day\nIntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)\nWkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)\nIntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)\nQtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED)\nIndividual Patterns:\nEvryDay (ScheduleCode)\nEvryWorkgDay (ScheduleCode)\nIntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)\nWkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)\nIntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)\nQtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay\nThe regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:\nEvryDay\nEvryWorkgDay\nIntrvlWkDay:0[1-9]:0[1-7]\nWkInMnthDay:0[1-5]:0[1-7]\nIntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])\nQtrDay:(ENGLISH|SCOTTISH|RECEIVED)\nFull Regular Expression:\n^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$",
          "type": "string",
          "minLength": 1,
          "maxLength": 35,
          "pattern": "^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$"
        },
        "Reference": {
          "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "FirstPaymentDateTime": {
          "description": "The date on which the first payment for a Standing Order schedule will be made.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "FirstPaymentAmount": {
          "description": "The amount of the first Standing Order",
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/Amount"
            },
            "Currency": {
              "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "Currency"
          ],
          "additionalProperties": false
        },
        "NextPaymentDateTime": {
          "description": "The date on which the next payment for a Standing Order schedule will be made.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "NextPaymentAmount": {
          "description": "The amount of the next Standing Order",
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/Amount"
            },
            "Currency": {
              "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "Currency"
          ],
          "additionalProperties": false
        },
        "FinalPaymentDateTime": {
          "description": "The date on which the final payment for a Standing Order schedule will be made.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "FinalPaymentAmount": {
          "description": "The amount of the final Standing Order",
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/Amount"
            },
            "Currency": {
              "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "Currency"
          ],
          "additionalProperties": false
        },
        "StandingOrderStatusCode": {
          "$ref": "#/definitions/OBExternalStandingOrderStatus1Code"
        }
      },
      "required": [
        "AccountId",
        "Frequency",
        "NextPaymentDateTime",
        "NextPaymentAmount"
      ],
      "additionalProperties": false
    },
    "OBStandingOrder2Detail": {
      "allOf": [
        {
          "$ref": "#/definitions/OBStandingOrder2"
        }
      ],
      "required": [
        "CreditorAccount"
      ]
    },
    "OBStandingOrder3": {
      "type": "object",
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "StandingOrderId": {
          "description": "A unique and immutable identifier used to identify the standing order resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "Frequency": {
          "description": "Individual Definitions:\nEvryDay - Every day\nEvryWorkgDay - Every working day\nIntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)\nWkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)\nIntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)\nQtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED)\nENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December. \nSCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.\nRECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December. \nIndividual Patterns:\nEvryDay (ScheduleCode)\nEvryWorkgDay (ScheduleCode)\nIntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)\nWkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)\nIntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)\nQtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay\nThe regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:\nEvryDay\nEvryWorkgDay\nIntrvlWkDay:0[1-9]:0[1-7]\nWkInMnthDay:0[1-5]:0[1-7]\nIntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])\nQtrDay:(ENGLISH|SCOTTISH|RECEIVED)\nFull Regular Expression:\n^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$",
          "type": "string",
          "minLength": 1,
          "maxLength": 35,
          "pattern": "^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$"
        },
        "Reference": {
          "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "FirstPaymentDateTime": {
          "description": "The date on which the first payment for a Standing Order schedule will be made.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "NextPaymentDateTime": {
          "description": "The date on which the next payment for a Standing Order schedule will be made.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "FinalPaymentDateTime": {
          "description": "The date on which the final payment for a Standing Order schedule will be made.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "StandingOrderStatusCode": {
          "$ref": "#/definitions/OBExternalStandingOrderStatus1Code"
        },
        "FirstPaymentAmount": {
          "$ref": "#/definitions/OBActiveOrHistoricCurrencyAndAmount"
        },
        "NextPaymentAmount": {
          "$ref": "#/definitions/OBActiveOrHistoricCurrencyAndAmount"
        },
        "FinalPaymentAmount": {
          "$ref": "#/definitions/OBActiveOrHistoricCurrencyAndAmount"
        },
        "CreditorAgent": {
          "$ref": "#/definitions/OBBranchAndFinancialInstitutionIdentification4"
        },
        "CreditorAccount": {
          "$ref": "#/definitions/OBCashAccount3"
        }
      },
      "required": [
        "AccountId",
        "Frequency",
        "NextPaymentDateTime",
        "NextPaymentAmount"
      ],
      "additionalProperties": false
    },
    "OBStatement1": {
      "description": "Provides further details on a statement resource.",
      "type": "object",
      "properties": {
        "AccountId": {
          "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "StatementId": {
          "description": "Unique identifier for the statement resource within an servicing institution. This identifier is both unique and immutable.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "StatementReference": {
          "description": "Unique reference for the statement. This reference may be optionally populated if available.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "Type": {
          "description": "Statement type, in a coded form.",
          "type": "string",
          "enum": [
            "AccountClosure",
            "AccountOpening",
            "Annual",
            "Interim",
            "RegularPeriodic"
          ]
        },
        "StartDateTime": {
          "description": "Date and time at which the statement period starts.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "EndDateTime": {
          "description": "Date and time at which the statement period ends.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "CreationDateTime": {
          "description": "Date and time at which the resource was created.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "StatementDescription": {
          "items": {
            "description": "Other descriptions that may be available for the statement resource.",
            "type": "string",
            "minLength": 1,
            "maxLength": 500
          },
          "type": "array",
          "description": "Other descriptions that may be available for the statement resource."
        },
        "StatementBenefit": {
          "items": {
            "description": "Set of elements used to provide details of a benefit or reward amount for the statement resource.",
            "type": "object",
            "properties": {
              "Type": {
                "description": "Benefit type, in a coded form.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40
              },
              "Amount": {
                "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
                "type": "object",
                "properties": {
                  "Amount": {
                    "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "Currency": {
                    "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
                    "type": "string",
                    "pattern": "^[A-Z]{3,3}$"
                  }
                },
                "required": [
                  "Amount",
                  "Currency"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "Type",
              "Amount"
            ],
            "additionalProperties": false
          },
          "type": "array",
          "description": "Set of elements used to provide details of a benefit or reward amount for the statement resource."
        },
        "StatementFee": {
          "items": {
            "description": "Set of elements used to provide details of a fee for the statement resource.",
            "type": "object",
            "properties": {
              "CreditDebitIndicator": {
                "type": "string",
                "enum": [
                  "Credit",
                  "Debit"
                ],
                "description": "Indicates whether the amount is a credit or a debit. \nUsage: A zero amount is considered to be a credit amount."
              },
              "Type": {
                "description": "Fee type, in a coded form.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40
              },
              "Amount": {
                "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
                "type": "object",
                "properties": {
                  "Amount": {
                    "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "Currency": {
                    "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
                    "type": "string",
                    "pattern": "^[A-Z]{3,3}$"
                  }
                },
                "required": [
                  "Amount",
                  "Currency"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "CreditDebitIndicator",
              "Type",
              "Amount"
            ],
            "additionalProperties": false
          },
          "type": "array",
          "description": "Set of elements used to provide details of a fee for the statement resource."
        },
        "StatementInterest": {
          "items": {
            "description": "Set of elements used to provide details of a generic interest amount related to the statement resource.",
            "type": "object",
            "properties": {
              "CreditDebitIndicator": {
                "type": "string",
                "enum": [
                  "Credit",
                  "Debit"
                ],
                "description": "Indicates whether the amount is a credit or a debit. \nUsage: A zero amount is considered to be a credit amount."
              },
              "Type": {
                "description": "Interest amount type, in a coded form.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40
              },
              "Amount": {
                "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
                "type": "object",
                "properties": {
                  "Amount": {
                    "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "Currency": {
                    "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
                    "type": "string",
                    "pattern": "^[A-Z]{3,3}$"
                  }
                },
                "required": [
                  "Amount",
                  "Currency"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "CreditDebitIndicator",
              "Type",
              "Amount"
            ],
            "additionalProperties": false
          },
          "type": "array",
          "description": "Set of elements used to provide details of a generic interest amount related to the statement resource."
        },
        "StatementDateTime": {
          "items": {
            "description": "Set of elements used to provide details of a generic date time for the statement resource.",
            "type": "object",
            "properties": {
              "DateTime": {
                "description": "Date and time associated with the date time type.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
                "type": "string",
                "format": "date-time"
              },
              "Type": {
                "description": "Date time type, in a coded form.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40
              }
            },
            "required": [
              "DateTime",
              "Type"
            ],
            "additionalProperties": false
          },
          "type": "array",
          "description": "Set of elements used to provide details of a generic date time for the statement resource."
        },
        "StatementRate": {
          "items": {
            "description": "Set of elements used to provide details of a generic rate related to the statement resource.",
            "type": "object",
            "properties": {
              "Rate": {
                "description": "Rate associated with the statement rate type.",
                "type": "string",
                "minLength": 1,
                "maxLength": 10,
                "pattern": "^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$"
              },
              "Type": {
                "description": "Statement rate type, in a coded form.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40
              }
            },
            "required": [
              "Rate",
              "Type"
            ],
            "additionalProperties": false
          },
          "type": "array",
          "description": "Set of elements used to provide details of a generic rate related to the statement resource."
        },
        "StatementValue": {
          "items": {
            "description": "Set of elements used to provide details of a generic number value related to the statement resource.",
            "type": "object",
            "properties": {
              "Value": {
                "description": "Value associated with the statement value type.",
                "type": "integer",
                "format": "int32"
              },
              "Type": {
                "description": "Statement value type, in a coded form.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40
              }
            },
            "required": [
              "Value",
              "Type"
            ],
            "additionalProperties": false
          },
          "type": "array",
          "description": "Set of elements used to provide details of a generic number value related to the statement resource."
        },
        "StatementAmount": {
          "items": {
            "description": "Set of elements used to provide details of a generic amount for the statement resource.",
            "type": "object",
            "properties": {
              "CreditDebitIndicator": {
                "type": "string",
                "enum": [
                  "Credit",
                  "Debit"
                ],
                "description": "Indicates whether the amount is a credit or a debit. \nUsage: A zero amount is considered to be a credit amount."
              },
              "Type": {
                "description": "Amount type, in a coded form.",
                "type": "string",
                "minLength": 1,
                "maxLength": 40
              },
              "Amount": {
                "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
                "type": "object",
                "properties": {
                  "Amount": {
                    "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "Currency": {
                    "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
                    "type": "string",
                    "pattern": "^[A-Z]{3,3}$"
                  }
                },
                "required": [
                  "Amount",
                  "Currency"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "CreditDebitIndicator",
              "Type",
              "Amount"
            ],
            "additionalProperties": false
          },
          "type": "array",
          "description": "Set of elements used to provide details of a generic amount for the statement resource."
        }
      },
      "required": [
        "AccountId",
        "Type",
        "StartDateTime",
        "EndDateTime",
        "CreationDateTime"
      ],
      "additionalProperties": false
    },
    "OBStatement1Basic": {
      "description": "Provides further details on a statement resource.",
      "type": "object",
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "StatementId": {
          "description": "Unique identifier for the statement resource within an servicing institution. This identifier is both unique and immutable.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "StatementReference": {
          "description": "Unique reference for the statement. This reference may be optionally populated if available.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "Type": {
          "$ref": "#/definitions/OBExternalStatementType1Code"
        },
        "StartDateTime": {
          "description": "Date and time at which the statement period starts.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "EndDateTime": {
          "description": "Date and time at which the statement period ends.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "CreationDateTime": {
          "description": "Date and time at which the resource was created.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "StatementDescription": {
          "items": {
            "description": "Other descriptions that may be available for the statement resource.",
            "type": "string",
            "minLength": 1,
            "maxLength": 500
          },
          "type": "array",
          "description": "Other descriptions that may be available for the statement resource."
        },
        "StatementBenefit": {
          "items": {
            "$ref": "#/definitions/OBStatementBenefit1"
          },
          "type": "array",
          "description": "Set of elements used to provide details of a benefit or reward amount for the statement resource."
        },
        "StatementFee": {
          "items": {
            "$ref": "#/definitions/OBStatementFee1"
          },
          "type": "array",
          "description": "Set of elements used to provide details of a fee for the statement resource."
        },
        "StatementInterest": {
          "items": {
            "$ref": "#/definitions/OBStatementInterest1"
          },
          "type": "array",
          "description": "Set of elements used to provide details of a generic interest amount related to the statement resource."
        },
        "StatementDateTime": {
          "items": {
            "$ref": "#/definitions/OBStatementDateTime1"
          },
          "type": "array",
          "description": "Set of elements used to provide details of a generic date time for the statement resource."
        },
        "StatementRate": {
          "items": {
            "$ref": "#/definitions/OBStatementRate1"
          },
          "type": "array",
          "description": "Set of elements used to provide details of a generic rate related to the statement resource."
        },
        "StatementValue": {
          "items": {
            "$ref": "#/definitions/OBStatementValue1"
          },
          "type": "array",
          "description": "Set of elements used to provide details of a generic number value related to the statement resource."
        }
      },
      "required": [
        "AccountId",
        "Type",
        "StartDateTime",
        "EndDateTime",
        "CreationDateTime"
      ],
      "additionalProperties": false
    },
    "OBStatement1Detail": {
      "allOf": [
        {
          "$ref": "#/definitions/OBStatement1"
        }
      ]
    },
    "OBStatementAmount1": {
      "description": "Set of elements used to provide details of a generic amount for the statement resource.",
      "type": "object",
      "properties": {
        "CreditDebitIndicator": {
          "type": "string",
          "enum": [
            "Credit",
            "Debit"
          ],
          "description": "Indicates whether the amount is a credit or a debit. \nUsage: A zero amount is considered to be a credit amount."
        },
        "Type": {
          "description": "Amount type, in a coded form.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "Amount": {
          "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
          "type": "object",
          "properties": {
            "Amount": {
              "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
              "type": "object",
              "properties": {},
              "additionalProperties": false
            },
            "Currency": {
              "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "Currency"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "CreditDebitIndicator",
        "Type",
        "Amount"
      ],
      "additionalProperties": false
    },
    "OBStatementBenefit1": {
      "description": "Set of elements used to provide details of a benefit or reward amount for the statement resource.",
      "type": "object",
      "properties": {
        "Type": {
          "description": "Benefit type, in a coded form.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "Amount": {
          "$ref": "#/definitions/OBActiveOrHistoricCurrencyAndAmount"
        }
      },
      "required": [
        "Type",
        "Amount"
      ],
      "additionalProperties": false
    },
    "OBStatementDateTime1": {
      "description": "Set of elements used to provide details of a generic date time for the statement resource.",
      "type": "object",
      "properties": {
        "DateTime": {
          "description": "Date and time associated with the date time type.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "Type": {
          "description": "Date time type, in a coded form.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        }
      },
      "required": [
        "DateTime",
        "Type"
      ],
      "additionalProperties": false
    },
    "OBStatementFee1": {
      "description": "Set of elements used to provide details of a fee for the statement resource.",
      "type": "object",
      "properties": {
        "CreditDebitIndicator": {
          "type": "string",
          "enum": [
            "Credit",
            "Debit"
          ],
          "description": "Indicates whether the amount is a credit or a debit. \nUsage: A zero amount is considered to be a credit amount."
        },
        "Type": {
          "description": "Fee type, in a coded form.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "Amount": {
          "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
          "type": "object",
          "properties": {
            "Amount": {
              "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
              "type": "object",
              "properties": {},
              "additionalProperties": false
            },
            "Currency": {
              "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "Currency"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "CreditDebitIndicator",
        "Type",
        "Amount"
      ],
      "additionalProperties": false
    },
    "OBStatementInterest1": {
      "description": "Set of elements used to provide details of a generic interest amount related to the statement resource.",
      "type": "object",
      "properties": {
        "CreditDebitIndicator": {
          "type": "string",
          "enum": [
            "Credit",
            "Debit"
          ],
          "description": "Indicates whether the amount is a credit or a debit. \nUsage: A zero amount is considered to be a credit amount."
        },
        "Type": {
          "description": "Interest amount type, in a coded form.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "Amount": {
          "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
          "type": "object",
          "properties": {
            "Amount": {
              "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
              "type": "object",
              "properties": {},
              "additionalProperties": false
            },
            "Currency": {
              "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "Currency"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "CreditDebitIndicator",
        "Type",
        "Amount"
      ],
      "additionalProperties": false
    },
    "OBStatementRate1": {
      "description": "Set of elements used to provide details of a generic rate related to the statement resource.",
      "type": "object",
      "properties": {
        "Rate": {
          "description": "Rate associated with the statement rate type.",
          "type": "string",
          "minLength": 1,
          "maxLength": 10,
          "pattern": "^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$"
        },
        "Type": {
          "description": "Statement rate type, in a coded form.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        }
      },
      "required": [
        "Rate",
        "Type"
      ],
      "additionalProperties": false
    },
    "OBStatementValue1": {
      "description": "Set of elements used to provide details of a generic number value related to the statement resource.",
      "type": "object",
      "properties": {
        "Value": {
          "description": "Value associated with the statement value type.",
          "type": "integer",
          "format": "int32"
        },
        "Type": {
          "description": "Statement value type, in a coded form.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        }
      },
      "required": [
        "Value",
        "Type"
      ],
      "additionalProperties": false
    },
    "OBTransaction2": {
      "description": "Provides further details on an entry in the report.",
      "type": "object",
      "properties": {
        "AccountId": {
          "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "TransactionId": {
          "description": "Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "TransactionReference": {
          "description": "Unique reference for the transaction. This reference is optionally populated, and may as an example be the FPID in the Faster Payments context.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "StatementReference": {
          "items": {
            "description": "Unique reference for the statement. This reference may be optionally populated if available.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "type": "array",
          "description": "Unique reference for the statement. This reference may be optionally populated if available."
        },
        "Amount": {
          "description": "Amount of money in the cash transaction entry.",
          "type": "object",
          "properties": {
            "Amount": {
              "type": "string",
              "pattern": "^\\d{1,13}\\.\\d{1,5}$"
            },
            "Currency": {
              "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "Currency"
          ],
          "additionalProperties": false
        },
        "CreditDebitIndicator": {
          "type": "string",
          "enum": [
            "Credit",
            "Debit"
          ],
          "description": "Indicates whether the transaction is a credit or a debit entry."
        },
        "Status": {
          "description": "Status of a transaction entry on the books of the account servicer.",
          "type": "string",
          "enum": [
            "Booked",
            "Pending"
          ]
        },
        "BookingDateTime": {
          "description": "Date and time when a transaction entry is posted to an account on the account servicer's books.\nUsage: Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "ValueDateTime": {
          "description": "Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry.\nUsage: If transaction entry status is pending and value date is present, then the value date refers to an expected/requested value date.\nFor transaction entries subject to availability/float and for which availability information is provided, the value date must not be used. In this case the availability component identifies the number of availability days.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "AddressLine": {
          "description": "Information that locates and identifies a specific address for a transaction entry, that is presented in free format text.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "BankTransactionCode": {
          "description": "Set of elements used to fully identify the type of underlying transaction resulting in an entry.",
          "type": "object",
          "properties": {
            "Code": {
              "description": "Specifies the family within a domain.",
              "type": "string"
            },
            "SubCode": {
              "description": "Specifies the sub-product family within a specific family.",
              "type": "string"
            }
          },
          "required": [
            "Code",
            "SubCode"
          ],
          "additionalProperties": false
        },
        "ProprietaryBankTransactionCode": {
          "description": "Set of elements to fully identify a proprietary bank transaction code.",
          "type": "object",
          "properties": {
            "Code": {
              "description": "Proprietary bank transaction code to identify the underlying transaction.",
              "type": "string",
              "minLength": 1,
              "maxLength": 35
            },
            "Issuer": {
              "description": "Identification of the issuer of the proprietary bank transaction code.",
              "type": "string",
              "minLength": 1,
              "maxLength": 35
            }
          },
          "required": [
            "Code"
          ],
          "additionalProperties": false
        },
        "EquivalentAmount": {
          "description": "Amount of money to be transferred between the debtor and creditor, before deduction of charges, expressed in the currency of the debtor's account, and to be transferred into a different currency. \nUsage : Currency of the amount is expressed in the currency of the debtor's account, but the amount to be transferred is in another currency. The debtor agent will convert the amount and currency to the to be transferred amount and currency, eg, 'pay equivalent of 100000 EUR in JPY'(and account is in EUR).",
          "type": "object",
          "properties": {
            "Amount": {
              "description": "Amount of money to be transferred between debtor and creditor, before deduction of charges, expressed in the currency of the debtor's account, and to be transferred in a different currency. \nUsage : Currency of the amount is expressed in the currency of the debtor's account, but the amount to be transferred is in another currency. The first agent will convert the amount and currency to the to be transferred amount and currency, eg, 'pay equivalent of 100000 EUR in JPY'(and account is in EUR).",
              "type": "object",
              "properties": {
                "Amount": {
                  "type": "string",
                  "pattern": "^\\d{1,13}\\.\\d{1,5}$"
                },
                "Currency": {
                  "description": "Code allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters.",
                  "type": "string",
                  "pattern": "^[A-Z]{3,3}$"
                }
              },
              "required": [
                "Amount",
                "Currency"
              ],
              "additionalProperties": false
            },
            "CurrencyOfTransfer": {
              "description": "Specifies the currency of the to be transferred amount, which is different from the currency of the debtor's account.",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "CurrencyOfTransfer"
          ],
          "additionalProperties": false
        },
        "CreditorAgent": {
          "type": "object",
          "properties": {
            "SchemeName": {
              "description": "Name of the identification scheme, in a coded form as published in an external list.",
              "type": "string",
              "enum": [
                "BICFI"
              ]
            },
            "Identification": {
              "type": "string",
              "minLength": 1,
              "maxLength": 35,
              "description": "Unique and unambiguous identification of a financial institution or a branch of a financial institution."
            }
          },
          "required": [
            "SchemeName",
            "Identification"
          ],
          "additionalProperties": false,
          "description": "Financial institution servicing an account for the creditor."
        },
        "DebtorAgent": {
          "type": "object",
          "properties": {
            "SchemeName": {
              "description": "Name of the identification scheme, in a coded form as published in an external list.",
              "type": "string",
              "enum": [
                "BICFI"
              ]
            },
            "Identification": {
              "type": "string",
              "minLength": 1,
              "maxLength": 35,
              "description": "Unique and unambiguous identification of a financial institution or a branch of a financial institution."
            }
          },
          "required": [
            "SchemeName",
            "Identification"
          ],
          "additionalProperties": false,
          "description": "Financial institution servicing an account for the debtor."
        },
        "CardInstrument": {
          "description": "Set of elements to describe the card instrument used in the transaction.",
          "type": "object",
          "properties": {
            "CardSchemeName": {
              "description": "Name of the card scheme.",
              "type": "string",
              "enum": [
                "AmericanExpress",
                "Diners",
                "Discover",
                "MasterCard",
                "VISA"
              ]
            },
            "AuthorisationType": {
              "description": "The card authorisation type.",
              "type": "string",
              "enum": [
                "ConsumerDevice",
                "Contactless",
                "None",
                "PIN"
              ]
            },
            "Name": {
              "description": "Name of the cardholder using the card instrument.",
              "type": "string",
              "minLength": 1,
              "maxLength": 70
            },
            "Identification": {
              "description": "Identification assigned by an institution to identify the card instrument used in the transaction. This identification is known by the account owner, and may be masked.",
              "type": "string",
              "minLength": 1,
              "maxLength": 34
            }
          },
          "required": [
            "CardSchemeName"
          ],
          "additionalProperties": false
        },
        "TransactionInformation": {
          "description": "Further details of the transaction. \nThis is the transaction narrative, which is unstructured text.",
          "type": "string",
          "minLength": 1,
          "maxLength": 500
        },
        "Balance": {
          "description": "Set of elements used to define the balance as a numerical representation of the net increases and decreases in an account after a transaction entry is applied to the account.",
          "type": "object",
          "properties": {
            "CreditDebitIndicator": {
              "type": "string",
              "enum": [
                "Credit",
                "Debit"
              ],
              "description": "Indicates whether the balance is a credit or a debit balance. \nUsage: A zero balance is considered to be a credit balance."
            },
            "Type": {
              "description": "Balance type, in a coded form.",
              "type": "string",
              "enum": [
                "ClosingAvailable",
                "ClosingBooked",
                "ClosingCleared",
                "Expected",
                "ForwardAvailable",
                "Information",
                "InterimAvailable",
                "InterimBooked",
                "InterimCleared",
                "OpeningAvailable",
                "OpeningBooked",
                "OpeningCleared",
                "PreviouslyClosedBooked"
              ]
            },
            "Amount": {
              "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
              "type": "object",
              "properties": {
                "Amount": {
                  "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                },
                "Currency": {
                  "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
                  "type": "string",
                  "pattern": "^[A-Z]{3,3}$"
                }
              },
              "required": [
                "Amount",
                "Currency"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "CreditDebitIndicator",
            "Type",
            "Amount"
          ],
          "additionalProperties": false
        },
        "MerchantDetails": {
          "description": "Details of the merchant involved in the transaction.",
          "type": "object",
          "properties": {
            "MerchantName": {
              "description": "Name by which the merchant is known.",
              "type": "string",
              "minLength": 1,
              "maxLength": 350
            },
            "MerchantCategoryCode": {
              "description": "Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.",
              "type": "string",
              "minLength": 3,
              "maxLength": 4
            }
          },
          "additionalProperties": false
        },
        "CreditorAccount": {
          "type": "object",
          "properties": {
            "SchemeName": {
              "description": "Name of the identification scheme, in a coded form as published in an external list.",
              "type": "string",
              "enum": [
                "IBAN",
                "PAN",
                "SortCodeAccountNumber"
              ]
            },
            "Identification": {
              "type": "string",
              "minLength": 1,
              "maxLength": 34,
              "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner."
            },
            "Name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 70,
              "description": "Name of the account, as assigned by the account servicing institution, in agreement with the account owner in order to provide an additional means of identification of the account.\nUsage: The account name is different from the account owner name. The account name is used in certain user communities to provide a means of identifying the account, in addition to the account owner's identity and the account number.\nOB: No name validation is expected for confirmation of payee."
            },
            "SecondaryIdentification": {
              "type": "string",
              "minLength": 1,
              "maxLength": 34,
              "description": "This is secondary identification of the account, as assigned by the account servicing institution. \nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination)."
            }
          },
          "required": [
            "SchemeName",
            "Identification"
          ],
          "additionalProperties": false,
          "description": "Unambiguous identification of the account of the creditor, in the case of a debit transaction."
        },
        "DebtorAccount": {
          "type": "object",
          "properties": {
            "SchemeName": {
              "description": "Name of the identification scheme, in a coded form as published in an external list.",
              "type": "string",
              "enum": [
                "IBAN",
                "PAN",
                "SortCodeAccountNumber"
              ]
            },
            "Identification": {
              "type": "string",
              "minLength": 1,
              "maxLength": 34,
              "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner."
            },
            "Name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 70,
              "description": "Name of the account, as assigned by the account servicing institution, in agreement with the account owner in order to provide an additional means of identification of the account.\nUsage: The account name is different from the account owner name. The account name is used in certain user communities to provide a means of identifying the account, in addition to the account owner's identity and the account number."
            },
            "SecondaryIdentification": {
              "type": "string",
              "minLength": 1,
              "maxLength": 34,
              "description": "This is secondary identification of the account, as assigned by the account servicing institution. \nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination)."
            }
          },
          "required": [
            "SchemeName",
            "Identification"
          ],
          "additionalProperties": false,
          "description": "Unambiguous identification of the account of the debtor, in the case of a crebit transaction."
        }
      },
      "required": [
        "AccountId",
        "Amount",
        "CreditDebitIndicator",
        "Status",
        "BookingDateTime"
      ],
      "additionalProperties": false
    },
    "OBTransaction2Basic": {
      "description": "Provides further details on an entry in the report.",
      "type": "object",
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountId"
        },
        "TransactionId": {
          "description": "Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "TransactionReference": {
          "description": "Unique reference for the transaction. This reference is optionally populated, and may as an example be the FPID in the Faster Payments context.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "StatementReference": {
          "items": {
            "description": "Unique reference for the statement. This reference may be optionally populated if available.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "type": "array",
          "description": "Unique reference for the statement. This reference may be optionally populated if available."
        },
        "Amount": {
          "description": "Amount of money in the cash transaction entry.",
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/Amount"
            },
            "Currency": {
              "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "Currency"
          ],
          "additionalProperties": false
        },
        "CreditDebitIndicator": {
          "type": "string",
          "enum": [
            "Credit",
            "Debit"
          ],
          "description": "Indicates whether the transaction is a credit or a debit entry."
        },
        "Status": {
          "$ref": "#/definitions/OBEntryStatus1Code"
        },
        "BookingDateTime": {
          "description": "Date and time when a transaction entry is posted to an account on the account servicer's books.\nUsage: Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "ValueDateTime": {
          "description": "Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry.\nUsage: If transaction entry status is pending and value date is present, then the value date refers to an expected/requested value date.\nFor transaction entries subject to availability/float and for which availability information is provided, the value date must not be used. In this case the availability component identifies the number of availability days.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "AddressLine": {
          "description": "Information that locates and identifies a specific address for a transaction entry, that is presented in free format text.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "BankTransactionCode": {
          "$ref": "#/definitions/OBBankTransactionCodeStructure1"
        },
        "ProprietaryBankTransactionCode": {
          "description": "Set of elements to fully identify a proprietary bank transaction code.",
          "type": "object",
          "properties": {
            "Code": {
              "description": "Proprietary bank transaction code to identify the underlying transaction.",
              "type": "string",
              "minLength": 1,
              "maxLength": 35
            },
            "Issuer": {
              "description": "Identification of the issuer of the proprietary bank transaction code.",
              "type": "string",
              "minLength": 1,
              "maxLength": 35
            }
          },
          "required": [
            "Code"
          ],
          "additionalProperties": false
        },
        "EquivalentAmount": {
          "description": "Amount of money to be transferred between the debtor and creditor, before deduction of charges, expressed in the currency of the debtor's account, and to be transferred into a different currency. \nUsage : Currency of the amount is expressed in the currency of the debtor's account, but the amount to be transferred is in another currency. The debtor agent will convert the amount and currency to the to be transferred amount and currency, eg, 'pay equivalent of 100000 EUR in JPY'(and account is in EUR).",
          "type": "object",
          "properties": {
            "Amount": {
              "$ref": "#/definitions/CurrencyAndAmount"
            },
            "CurrencyOfTransfer": {
              "description": "Specifies the currency of the to be transferred amount, which is different from the currency of the debtor's account.",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "CurrencyOfTransfer"
          ],
          "additionalProperties": false
        },
        "CreditorAgent": {
          "allOf": [
            {
              "$ref": "#/definitions/OBBranchAndFinancialInstitutionIdentification2"
            },
            {
              "description": "Financial institution servicing an account for the creditor."
            },
            {
              "properties": {
                "Identification": {
                  "description": "Unique and unambiguous identification of a financial institution or a branch of a financial institution."
                }
              }
            }
          ]
        },
        "DebtorAgent": {
          "allOf": [
            {
              "$ref": "#/definitions/OBBranchAndFinancialInstitutionIdentification2"
            },
            {
              "description": "Financial institution servicing an account for the debtor."
            },
            {
              "properties": {
                "Identification": {
                  "description": "Unique and unambiguous identification of a financial institution or a branch of a financial institution."
                }
              }
            }
          ]
        },
        "CardInstrument": {
          "$ref": "#/definitions/OBTransactionCardInstrument1"
        }
      },
      "required": [
        "AccountId",
        "Amount",
        "CreditDebitIndicator",
        "Status",
        "BookingDateTime"
      ],
      "additionalProperties": false
    },
    "OBTransaction2Detail": {
      "allOf": [
        {
          "$ref": "#/definitions/OBTransaction2"
        }
      ]
    },
    "OBTransaction3": {
      "description": "Provides further details on an entry in the report.",
      "type": "object",
      "properties": {
        "AccountId": {
          "description": "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "TransactionId": {
          "description": "Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.",
          "type": "string",
          "minLength": 1,
          "maxLength": 40
        },
        "TransactionReference": {
          "description": "Unique reference for the transaction. This reference is optionally populated, and may as an example be the FPID in the Faster Payments context.",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "StatementReference": {
          "items": {
            "description": "Unique reference for the statement. This reference may be optionally populated if available.",
            "type": "string",
            "minLength": 1,
            "maxLength": 35
          },
          "type": "array",
          "description": "Unique reference for the statement. This reference may be optionally populated if available."
        },
        "CreditDebitIndicator": {
          "type": "string",
          "enum": [
            "Credit",
            "Debit"
          ],
          "description": "Indicates whether the transaction is a credit or a debit entry."
        },
        "Status": {
          "description": "Status of a transaction entry on the books of the account servicer.",
          "type": "string",
          "enum": [
            "Booked",
            "Pending"
          ]
        },
        "BookingDateTime": {
          "description": "Date and time when a transaction entry is posted to an account on the account servicer's books.\nUsage: Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "ValueDateTime": {
          "description": "Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry.\nUsage: If transaction entry status is pending and value date is present, then the value date refers to an expected/requested value date.\nFor transaction entries subject to availability/float and for which availability information is provided, the value date must not be used. In this case the availability component identifies the number of availability days.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
          "type": "string",
          "format": "date-time"
        },
        "TransactionInformation": {
          "description": "Further details of the transaction. \nThis is the transaction narrative, which is unstructured text.",
          "type": "string",
          "minLength": 1,
          "maxLength": 500
        },
        "AddressLine": {
          "description": "Information that locates and identifies a specific address for a transaction entry, that is presented in free format text.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "Amount": {
          "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
          "type": "object",
          "properties": {
            "Amount": {
              "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
              "type": "object",
              "properties": {},
              "additionalProperties": false
            },
            "Currency": {
              "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "Currency"
          ],
          "additionalProperties": false
        },
        "ChargeAmount": {
          "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
          "type": "object",
          "properties": {
            "Amount": {
              "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
              "type": "object",
              "properties": {},
              "additionalProperties": false
            },
            "Currency": {
              "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "Currency"
          ],
          "additionalProperties": false
        },
        "CurrencyExchange": {
          "description": "Set of elements used to provide details on the currency exchange.",
          "type": "object",
          "properties": {
            "SourceCurrency": {
              "description": "Currency from which an amount is to be converted in a currency conversion.",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            },
            "TargetCurrency": {
              "description": "Currency from which an amount is to be converted in a currency conversion.",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            },
            "UnitCurrency": {
              "description": "Currency from which an amount is to be converted in a currency conversion.",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            },
            "ExchangeRate": {
              "description": "Factor used to convert an amount from one currency into another. This reflects the price at which one currency was bought with another currency.\nUsage: ExchangeRate expresses the ratio between UnitCurrency and QuotedCurrency (ExchangeRate = UnitCurrency/QuotedCurrency).",
              "type": "object",
              "properties": {},
              "additionalProperties": false
            },
            "ContractIdentification": {
              "description": "Unique identification to unambiguously identify the foreign exchange contract.",
              "type": "string",
              "minLength": 1,
              "maxLength": 35
            },
            "QuotationDate": {
              "description": "Date and time at which an exchange rate is quoted.\nAll dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
              "type": "string",
              "format": "date-time"
            },
            "InstructedAmount": {
              "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
              "type": "object",
              "properties": {
                "Amount": {
                  "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                },
                "Currency": {
                  "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
                  "type": "string",
                  "pattern": "^[A-Z]{3,3}$"
                }
              },
              "required": [
                "Amount",
                "Currency"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "SourceCurrency",
            "ExchangeRate"
          ],
          "additionalProperties": false
        },
        "BankTransactionCode": {
          "description": "Set of elements used to fully identify the type of underlying transaction resulting in an entry.",
          "type": "object",
          "properties": {
            "Code": {
              "description": "Specifies the family within a domain.",
              "type": "string"
            },
            "SubCode": {
              "description": "Specifies the sub-product family within a specific family.",
              "type": "string"
            }
          },
          "required": [
            "Code",
            "SubCode"
          ],
          "additionalProperties": false
        },
        "ProprietaryBankTransactionCode": {
          "description": "Set of elements to fully identify a proprietary bank transaction code.",
          "type": "object",
          "properties": {
            "Code": {
              "description": "Proprietary bank transaction code to identify the underlying transaction.",
              "type": "string",
              "minLength": 1,
              "maxLength": 35
            },
            "Issuer": {
              "description": "Identification of the issuer of the proprietary bank transaction code.",
              "type": "string",
              "minLength": 1,
              "maxLength": 35
            }
          },
          "required": [
            "Code"
          ],
          "additionalProperties": false
        },
        "Balance": {
          "description": "Set of elements used to define the balance as a numerical representation of the net increases and decreases in an account after a transaction entry is applied to the account.",
          "type": "object",
          "properties": {
            "CreditDebitIndicator": {
              "type": "string",
              "enum": [
                "Credit",
                "Debit"
              ],
              "description": "Indicates whether the balance is a credit or a debit balance. \nUsage: A zero balance is considered to be a credit balance."
            },
            "Type": {
              "description": "Balance type, in a coded form.",
              "type": "string",
              "enum": [
                "ClosingAvailable",
                "ClosingBooked",
                "ClosingCleared",
                "Expected",
                "ForwardAvailable",
                "Information",
                "InterimAvailable",
                "InterimBooked",
                "InterimCleared",
                "OpeningAvailable",
                "OpeningBooked",
                "OpeningCleared",
                "PreviouslyClosedBooked"
              ]
            },
            "Amount": {
              "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
              "type": "object",
              "properties": {
                "Amount": {
                  "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                },
                "Currency": {
                  "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
                  "type": "string",
                  "pattern": "^[A-Z]{3,3}$"
                }
              },
              "required": [
                "Amount",
                "Currency"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "CreditDebitIndicator",
            "Type",
            "Amount"
          ],
          "additionalProperties": false
        },
        "MerchantDetails": {
          "description": "Details of the merchant involved in the transaction.",
          "type": "object",
          "properties": {
            "MerchantName": {
              "description": "Name by which the merchant is known.",
              "type": "string",
              "minLength": 1,
              "maxLength": 350
            },
            "MerchantCategoryCode": {
              "description": "Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.",
              "type": "string",
              "minLength": 3,
              "maxLength": 4
            }
          },
          "additionalProperties": false
        },
        "CreditorAgent": {
          "description": "Financial institution servicing an account for the debtor.",
          "type": "object",
          "properties": {
            "SchemeName": {
              "description": "Name of the identification scheme, in a coded form as published in an external list.",
              "type": "string",
              "minLength": 1,
              "maxLength": 40
            },
            "Identification": {
              "description": "Unique and unambiguous identification of a financial institution or a branch of a financial institution.",
              "type": "string",
              "minLength": 1,
              "maxLength": 35
            },
            "Name": {
              "description": "Name by which an agent is known and which is usually used to identify that agent.",
              "type": "string",
              "minLength": 1,
              "maxLength": 140
            },
            "PostalAddress": {
              "description": "Information that locates and identifies a specific address, as defined by postal services.",
              "type": "object",
              "properties": {
                "AddressType": {
                  "description": "Identifies the nature of the postal address.",
                  "type": "string",
                  "enum": [
                    "Business",
                    "Correspondence",
                    "DeliveryTo",
                    "MailTo",
                    "POBox",
                    "Postal",
                    "Residential",
                    "Statement"
                  ]
                },
                "Department": {
                  "description": "Identification of a division of a large organisation or building.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 70
                },
                "SubDepartment": {
                  "description": "Identification of a sub-division of a large organisation or building.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 70
                },
                "StreetName": {
                  "description": "Name of a street or thoroughfare.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 70
                },
                "BuildingNumber": {
                  "description": "Number that identifies the position of a building on a street.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 16
                },
                "PostCode": {
                  "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 16
                },
                "TownName": {
                  "description": "Name of a built-up area, with defined boundaries, and a local government.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 35
                },
                "CountrySubDivision": {
                  "description": "Identifies a subdivision of a country such as state, region, county.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 35
                },
                "Country": {
                  "description": "Nation with its own government.",
                  "type": "string",
                  "pattern": "^[A-Z]{2,2}$"
                },
                "AddressLine": {
                  "description": "Information that locates and identifies a specific address, as defined by postal services, presented in free format text.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 70
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "CreditorAccount": {
          "description": "Unambiguous identification of the account of the debtor, in the case of a crebit transaction.",
          "type": "object",
          "properties": {
            "SchemeName": {
              "description": "Name of the identification scheme, in a coded form as published in an external list.",
              "type": "string",
              "minLength": 1,
              "maxLength": 40
            },
            "Identification": {
              "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner.",
              "type": "string",
              "minLength": 1,
              "maxLength": 256
            },
            "Name": {
              "description": "Name of the account, as assigned by the account servicing institution.\nUsage: The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.",
              "type": "string",
              "minLength": 1,
              "maxLength": 70
            },
            "SecondaryIdentification": {
              "description": "This is secondary identification of the account, as assigned by the account servicing institution. \nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
              "type": "string",
              "minLength": 1,
              "maxLength": 34
            }
          },
          "additionalProperties": false
        },
        "DebtorAgent": {
          "description": "Financial institution servicing an account for the debtor.",
          "type": "object",
          "properties": {
            "SchemeName": {
              "description": "Name of the identification scheme, in a coded form as published in an external list.",
              "type": "string",
              "minLength": 1,
              "maxLength": 40
            },
            "Identification": {
              "description": "Unique and unambiguous identification of a financial institution or a branch of a financial institution.",
              "type": "string",
              "minLength": 1,
              "maxLength": 35
            },
            "Name": {
              "description": "Name by which an agent is known and which is usually used to identify that agent.",
              "type": "string",
              "minLength": 1,
              "maxLength": 140
            },
            "PostalAddress": {
              "description": "Information that locates and identifies a specific address, as defined by postal services.",
              "type": "object",
              "properties": {
                "AddressType": {
                  "description": "Identifies the nature of the postal address.",
                  "type": "string",
                  "enum": [
                    "Business",
                    "Correspondence",
                    "DeliveryTo",
                    "MailTo",
                    "POBox",
                    "Postal",
                    "Residential",
                    "Statement"
                  ]
                },
                "Department": {
                  "description": "Identification of a division of a large organisation or building.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 70
                },
                "SubDepartment": {
                  "description": "Identification of a sub-division of a large organisation or building.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 70
                },
                "StreetName": {
                  "description": "Name of a street or thoroughfare.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 70
                },
                "BuildingNumber": {
                  "description": "Number that identifies the position of a building on a street.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 16
                },
                "PostCode": {
                  "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 16
                },
                "TownName": {
                  "description": "Name of a built-up area, with defined boundaries, and a local government.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 35
                },
                "CountrySubDivision": {
                  "description": "Identifies a subdivision of a country such as state, region, county.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 35
                },
                "Country": {
                  "description": "Nation with its own government.",
                  "type": "string",
                  "pattern": "^[A-Z]{2,2}$"
                },
                "AddressLine": {
                  "description": "Information that locates and identifies a specific address, as defined by postal services, presented in free format text.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 70
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "DebtorAccount": {
          "description": "Unambiguous identification of the account of the debtor, in the case of a crebit transaction.",
          "type": "object",
          "properties": {
            "SchemeName": {
              "description": "Name of the identification scheme, in a coded form as published in an external list.",
              "type": "string",
              "minLength": 1,
              "maxLength": 40
            },
            "Identification": {
              "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner.",
              "type": "string",
              "minLength": 1,
              "maxLength": 256
            },
            "Name": {
              "description": "Name of the account, as assigned by the account servicing institution.\nUsage: The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.",
              "type": "string",
              "minLength": 1,
              "maxLength": 70
            },
            "SecondaryIdentification": {
              "description": "This is secondary identification of the account, as assigned by the account servicing institution. \nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).",
              "type": "string",
              "minLength": 1,
              "maxLength": 34
            }
          },
          "additionalProperties": false
        },
        "CardInstrument": {
          "description": "Set of elements to describe the card instrument used in the transaction.",
          "type": "object",
          "properties": {
            "CardSchemeName": {
              "description": "Name of the card scheme.",
              "type": "string",
              "enum": [
                "AmericanExpress",
                "Diners",
                "Discover",
                "MasterCard",
                "VISA"
              ]
            },
            "AuthorisationType": {
              "description": "The card authorisation type.",
              "type": "string",
              "enum": [
                "ConsumerDevice",
                "Contactless",
                "None",
                "PIN"
              ]
            },
            "Name": {
              "description": "Name of the cardholder using the card instrument.",
              "type": "string",
              "minLength": 1,
              "maxLength": 70
            },
            "Identification": {
              "description": "Identification assigned by an institution to identify the card instrument used in the transaction. This identification is known by the account owner, and may be masked.",
              "type": "string",
              "minLength": 1,
              "maxLength": 34
            }
          },
          "required": [
            "CardSchemeName"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "AccountId",
        "CreditDebitIndicator",
        "Status",
        "BookingDateTime",
        "Amount"
      ],
      "additionalProperties": false
    },
    "OBTransactionCardInstrument1": {
      "description": "Set of elements to describe the card instrument used in the transaction.",
      "type": "object",
      "properties": {
        "CardSchemeName": {
          "$ref": "#/definitions/OBExternalCardSchemeType1Code"
        },
        "AuthorisationType": {
          "$ref": "#/definitions/OBExternalCardAuthorisationType1Code"
        },
        "Name": {
          "description": "Name of the cardholder using the card instrument.",
          "type": "string",
          "minLength": 1,
          "maxLength": 70
        },
        "Identification": {
          "description": "Identification assigned by an institution to identify the card instrument used in the transaction. This identification is known by the account owner, and may be masked.",
          "type": "string",
          "minLength": 1,
          "maxLength": 34
        }
      },
      "required": [
        "CardSchemeName"
      ],
      "additionalProperties": false
    },
    "OBTransactionCashBalance": {
      "description": "Set of elements used to define the balance as a numerical representation of the net increases and decreases in an account after a transaction entry is applied to the account.",
      "type": "object",
      "properties": {
        "CreditDebitIndicator": {
          "type": "string",
          "enum": [
            "Credit",
            "Debit"
          ],
          "description": "Indicates whether the balance is a credit or a debit balance. \nUsage: A zero balance is considered to be a credit balance."
        },
        "Type": {
          "description": "Balance type, in a coded form.",
          "type": "string",
          "enum": [
            "ClosingAvailable",
            "ClosingBooked",
            "ClosingCleared",
            "Expected",
            "ForwardAvailable",
            "Information",
            "InterimAvailable",
            "InterimBooked",
            "InterimCleared",
            "OpeningAvailable",
            "OpeningBooked",
            "OpeningCleared",
            "PreviouslyClosedBooked"
          ]
        },
        "Amount": {
          "description": "Amount of money of the cash balance after a transaction entry is applied to the account..",
          "type": "object",
          "properties": {
            "Amount": {
              "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
              "type": "object",
              "properties": {},
              "additionalProperties": false
            },
            "Currency": {
              "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
              "type": "string",
              "pattern": "^[A-Z]{3,3}$"
            }
          },
          "required": [
            "Amount",
            "Currency"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "CreditDebitIndicator",
        "Type",
        "Amount"
      ],
      "additionalProperties": false
    },
    "OB_OtherProductType1": {
      "description": "This field provides extension to the ProductType enumeration.\nIf ProductType - \"Other\" is chosen, this field must be populated with name, and description for ASPSP specific product type",
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      },
      "required": [
        "Name",
        "Description"
      ],
      "additionalProperties": false
    },
    "TransactionInformation": {
      "description": "Further details of the transaction. \nThis is the transaction narrative, which is unstructured text.",
      "type": "string",
      "minLength": 1,
      "maxLength": 500
    },
    "File": {
      "type": "string",
      "format": "binary"
    },
    "Error": {
      "required": [
        "ErrorCode",
        "Message"
      ],
      "properties": {
        "ErrorCode": {
          "type": "string",
          "description": "Textual error code",
          "title": "ErrorCode",
          "minLength": 1,
          "maxLength": 40
        },
        "Message": {
          "type": "string",
          "description": "Error message with specific reference to the cause of the problem, e.g., MISSING_AMOUNT_CURRENCY",
          "title": "Message",
          "minLength": 1,
          "maxLength": 256
        },
        "Path": {
          "type": "string",
          "description": "Optionally, reference to the field with error, e.g., /Data/Initiation/InstructedAmount/Currency",
          "title": "Path",
          "minLength": 1,
          "maxLength": 256
        },
        "Url": {
          "type": "string",
          "description": "Optionally, a URL to help remediate the problem, to API Reference, or help etc",
          "title": "Url",
          "minLength": 1,
          "maxLength": 256
        }
      }
    },
    "ISODateTime": {
      "description": "All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
      "type": "string",
      "format": "date-time"
    },
    "Links": {
      "type": "object",
      "description": "Links relevant to the payload",
      "properties": {
        "Self": {
          "type": "string",
          "format": "uri"
        },
        "First": {
          "type": "string",
          "format": "uri"
        },
        "Prev": {
          "type": "string",
          "format": "uri"
        },
        "Next": {
          "type": "string",
          "format": "uri"
        },
        "Last": {
          "type": "string",
          "format": "uri"
        }
      },
      "additionalProperties": false,
      "required": [
        "Self"
      ]
    },
    "Meta": {
      "title": "MetaData",
      "type": "object",
      "description": "Meta Data relevant to the payload",
      "properties": {
        "TotalPages": {
          "type": "integer",
          "format": "int32"
        },
        "FirstAvailableDateTime": {
          "$ref": "#/definitions/ISODateTime"
        },
        "LastAvailableDateTime": {
          "$ref": "#/definitions/ISODateTime"
        }
      },
      "additionalProperties": false
    },
    "OBErrorResponse": {
      "description": "Bad request",
      "required": [
        "Code",
        "Message",
        "Errors"
      ],
      "properties": {
        "Code": {
          "type": "number",
          "description": "Mandatory, high level Textual error code, e.g., BAD_REQUEST",
          "title": "Code",
          "minLength": 1,
          "maxLength": 40
        },
        "Id": {
          "type": "string",
          "description": "Optionally, a Unique reference for the error instance, for audit purposes, in case of unkown/unclassified errors",
          "title": "ID"
        },
        "Message": {
          "type": "string",
          "description": "Brief non contextual Error message, e.g., 'There is something wrong with the request parameters provided'",
          "title": "Message",
          "minLength": 1,
          "maxLength": 40
        },
        "Errors": {
          "type": "array",
          "description": "An array of detail error codes, and messages, if there are more than one error",
          "title": "Errors",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      },
      "additionalProperties": false
    },
    "OBRisk2": {
      "description": "The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Account Info.",
      "type": "object",
      "properties": {},
      "additionalProperties": false
    }
  }
}